diff --git a/sklearn/ensemble/iforest.py b/sklearn/ensemble/iforest.py
index 8a1bd3625..f42c80532 100644
--- a/sklearn/ensemble/iforest.py
+++ b/sklearn/ensemble/iforest.py
@@ -120,6 +120,11 @@ class IsolationForest(BaseBagging, OutlierMixin):
     verbose : int, optional (default=0)
         Controls the verbosity of the tree building process.
 
+    warm_start : bool, optional (default=False)
+        When set to ``True``, reuse the solution of the previous call to fit
+        and add more estimators to the ensemble, otherwise, just fit a whole
+        new forest. See :term:`the Glossary <warm_start>`.
+
 
     Attributes
     ----------
@@ -173,7 +178,8 @@ class IsolationForest(BaseBagging, OutlierMixin):
                  n_jobs=None,
                  behaviour='old',
                  random_state=None,
-                 verbose=0):
+                 verbose=0,
+                 warm_start=False):
         super().__init__(
             base_estimator=ExtraTreeRegressor(
                 max_features=1,
@@ -187,7 +193,8 @@ class IsolationForest(BaseBagging, OutlierMixin):
             max_features=max_features,
             n_jobs=n_jobs,
             random_state=random_state,
-            verbose=verbose)
+            verbose=verbose,
+            warm_start=warm_start)
 
         self.behaviour = behaviour
         self.contamination = contamination
diff --git a/test_warm_start.py b/test_warm_start.py
new file mode 100644
index 000000000..2df445904
--- /dev/null
+++ b/test_warm_start.py
@@ -0,0 +1,25 @@
+import numpy as np
+from sklearn.ensemble import IsolationForest
+
+# Create a simple dataset
+X = np.random.rand(100, 5)
+
+# Test warm_start functionality
+# Initialize with n_estimators=5
+iso = IsolationForest(n_estimators=5, warm_start=True, random_state=42)
+iso.fit(X)
+
+# Check that we have 5 estimators
+print(f"Number of estimators after first fit: {len(iso.estimators_)}")
+
+# Increment n_estimators and fit again
+iso.n_estimators += 5
+iso.fit(X)
+
+# Check that we now have 10 estimators (5 original + 5 new)
+print(f"Number of estimators after second fit: {len(iso.estimators_)}")
+
+# Test that warm_start=False resets the estimators
+iso = IsolationForest(n_estimators=5, warm_start=False, random_state=42)
+iso.fit(X)
+print(f"Number of estimators with warm_start=False: {len(iso.estimators_)}")
\ No newline at end of file
