diff --git a/src/_pytest/runner.py b/src/_pytest/runner.py
index 584c3229d..0164382e4 100644
--- a/src/_pytest/runner.py
+++ b/src/_pytest/runner.py
@@ -176,6 +176,12 @@ def pytest_runtest_call(item: Item) -> None:
 
 
 def pytest_runtest_teardown(item: Item, nextitem: Optional[Item]) -> None:
+    # Skip teardown if the item is a unittest test case and the parent class is skipped
+    if hasattr(item, "parent"):
+        from _pytest.unittest import _is_skipped
+        if item.parent is not None and _is_skipped(item.parent):
+            return
+
     _update_current_test_var(item, "teardown")
     item.session._setupstate.teardown_exact(nextitem)
     _update_current_test_var(item, None)
diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 851e4943b..52bcdec88 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -204,6 +204,10 @@ class TestCaseFunction(Function):
             self._request._fillfixtures()
 
     def teardown(self) -> None:
+        # Skip teardown if the parent class is skipped
+        if self.parent is not None and _is_skipped(self.parent):
+            return
+
         if self._explicit_tearDown is not None:
             self._explicit_tearDown()
             self._explicit_tearDown = None
diff --git a/test_repro_skip_class.py b/test_repro_skip_class.py
new file mode 100644
index 000000000..632c72c7f
--- /dev/null
+++ b/test_repro_skip_class.py
@@ -0,0 +1,10 @@
+import unittest
+
+@unittest.skip("hello")
+class MyTestCase(unittest.TestCase):
+    def setUp(self):
+        xxx
+    def test_one(self):
+        pass
+    def tearDown(self):
+        xxx
\ No newline at end of file
diff --git a/test_skip_class_teardown.py b/test_skip_class_teardown.py
new file mode 100644
index 000000000..a2bdd548b
--- /dev/null
+++ b/test_skip_class_teardown.py
@@ -0,0 +1,31 @@
+import unittest
+import pytest
+
+# Test class with skip decorator
+@unittest.skip("skipped class")
+class TestSkipClass(unittest.TestCase):
+    def setUp(self):
+        self.setup_called = True
+
+    def test_method(self):
+        self.assertTrue(True)
+
+    def tearDown(self):
+        self.tear_down_called = True
+
+# Test class without skip decorator
+class TestNormalClass(unittest.TestCase):
+    def setUp(self):
+        self.setup_called = True
+
+    def test_method(self):
+        self.assertTrue(True)
+
+    def tearDown(self):
+        self.tear_down_called = True
+
+def test_skip_class_with_pdb():
+    """Test that skipped classes don't run tearDown when using --pdb."""
+    # This test will be run with --pdb to verify the issue
+    # We expect no errors since our fix should prevent tearDown from running
+    assert True
\ No newline at end of file
