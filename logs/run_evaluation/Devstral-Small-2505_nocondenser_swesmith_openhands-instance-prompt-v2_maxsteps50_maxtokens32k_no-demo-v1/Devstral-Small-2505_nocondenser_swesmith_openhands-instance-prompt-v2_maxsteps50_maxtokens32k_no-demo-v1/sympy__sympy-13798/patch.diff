diff --git a/final_test.py b/final_test.py
new file mode 100644
index 0000000000..dc1ab6b366
--- /dev/null
+++ b/final_test.py
@@ -0,0 +1,24 @@
+from sympy import symbols, latex, Integral
+
+x, y = symbols('x y')
+
+# Test with the original allowed values
+print("Original allowed values:")
+print("1. None (space):", latex(3*x**2*y, mul_symbol=None))
+print("2. 'dot':", latex(3*x**2*y, mul_symbol="dot"))
+print("3. 'ldot':", latex(3*x**2*y, mul_symbol="ldot"))
+print("4. 'times':", latex(3*x**2*y, mul_symbol="times"))
+
+# Test with custom value (thin space)
+print("\nCustom value (thin space):")
+print(latex(3*x**2*y, mul_symbol="\\,"))
+
+# Compare with integral (which already uses thin space)
+print("\nIntegral (which already uses thin space):")
+print(latex(Integral(2*x**2*y, x)))
+
+# Verify that the custom value works with other expressions
+print("\nOther expressions with custom thin space:")
+print("a. Simple multiplication:", latex(2*x, mul_symbol="\\,"))
+print("b. Powers:", latex(2*x**3, mul_symbol="\\,"))
+print("c. Complex expression:", latex(2*x**3*y**2 + 3*x*y, mul_symbol="\\,"))
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..55ebd7a782
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,15 @@
+from sympy import symbols, latex, Integral
+
+x, y = symbols('x y')
+
+# Test with allowed value
+print("Using allowed value 'dot':")
+print(latex(3*x**2*y, mul_symbol="dot"))
+
+# Test with custom value (thin space)
+print("\nUsing custom value '\\,' (thin space):")
+print(latex(3*x**2*y, mul_symbol="\\,"))
+
+# Compare with integral (which already uses thin space)
+print("\nIntegral (which already uses thin space):")
+print(latex(Integral(2*x**2*y, x)))
\ No newline at end of file
diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py
index ad4d7d9613..50aaac129f 100644
--- a/sympy/printing/latex.py
+++ b/sympy/printing/latex.py
@@ -156,11 +156,20 @@ def __init__(self, settings=None):
             "times": r" \times "
         }
 
-        self._settings['mul_symbol_latex'] = \
-            mul_symbol_table[self._settings['mul_symbol']]
+        # Use the table value if the mul_symbol is in the table, otherwise use the value directly
+        if self._settings['mul_symbol'] in mul_symbol_table:
+            self._settings['mul_symbol_latex'] = mul_symbol_table[self._settings['mul_symbol']]
+        else:
+            self._settings['mul_symbol_latex'] = self._settings['mul_symbol']
 
-        self._settings['mul_symbol_latex_numbers'] = \
-            mul_symbol_table[self._settings['mul_symbol'] or 'dot']
+        # For numbers, use the table value if the mul_symbol is in the table,
+        # otherwise use the value directly, or fall back to 'dot'
+        if self._settings['mul_symbol'] in mul_symbol_table:
+            self._settings['mul_symbol_latex_numbers'] = mul_symbol_table[self._settings['mul_symbol']]
+        elif self._settings['mul_symbol'] is not None:
+            self._settings['mul_symbol_latex_numbers'] = self._settings['mul_symbol']
+        else:
+            self._settings['mul_symbol_latex_numbers'] = mul_symbol_table['dot']
 
         self._delim_dict = {'(': ')', '[': ']'}
 
@@ -2155,11 +2164,15 @@ def latex(expr, **settings):
     \frac{1}{2 \pi} \int r\, dr
 
     mul_symbol: The symbol to use for multiplication. Can be one of None,
-    "ldot", "dot", or "times".
+    "ldot", "dot", or "times", or any custom LaTeX string. For example, to use a thin space
+    as the multiplication symbol, use mul_symbol="\\,".
 
     >>> print(latex((2*tau)**sin(Rational(7,2)), mul_symbol="times"))
     \left(2 \times \tau\right)^{\sin{\left (\frac{7}{2} \right )}}
 
+    >>> print(latex(3*x**2*y, mul_symbol="\\,"))
+    3 \, x^{2} \, y
+
     inv_trig_style: How inverse trig functions should be displayed. Can be one
     of "abbreviated", "full", or "power". Defaults to "abbreviated".
 
diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py
index ef4724e96f..a8a6fc8aae 100644
--- a/sympy/printing/tests/test_latex.py
+++ b/sympy/printing/tests/test_latex.py
@@ -991,6 +991,10 @@ def test_latex_mul_symbol():
     assert latex(4*x, mul_symbol='dot') == "4 \\cdot x"
     assert latex(4*x, mul_symbol='ldot') == r"4 \,.\, x"
 
+    # Test custom mul_symbol
+    assert latex(4*x, mul_symbol="\\,") == r"4\,x"
+    assert latex(4*x**2, mul_symbol="\\,") == r"4\,x^{2}"
+
 
 def test_latex_issue_4381():
     y = 4*4**log(2)
