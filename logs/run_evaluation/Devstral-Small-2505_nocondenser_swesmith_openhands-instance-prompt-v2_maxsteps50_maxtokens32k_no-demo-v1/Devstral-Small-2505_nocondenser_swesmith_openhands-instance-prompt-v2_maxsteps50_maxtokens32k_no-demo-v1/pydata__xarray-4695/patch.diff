diff --git a/comprehensive_test.py b/comprehensive_test.py
new file mode 100644
index 00000000..3760bf4a
--- /dev/null
+++ b/comprehensive_test.py
@@ -0,0 +1,41 @@
+import numpy as np
+import pandas as pd
+from xarray import DataArray
+
+def test_method_dimension():
+    """Test that using a dimension named 'method' works correctly."""
+    # Create a DataArray with regular dimension names
+    empty = np.zeros((2, 2))
+    D1 = DataArray(empty, dims=['dim1', 'dim2'], coords={'dim1': ['x', 'y'], 'dim2': ['a', 'b']})
+
+    # Create a DataArray with a dimension named "method"
+    D2 = DataArray(empty, dims=['dim1', 'method'], coords={'dim1': ['x', 'y'], 'method': ['a', 'b']})
+
+    # Test regular access
+    print("Testing regular dimension names:")
+    result1 = D1.loc[dict(dim1='x', dim2='a')]
+    print(f"Result 1: {result1}")
+
+    # Test with 'method' as dimension name
+    print("\nTesting 'method' as dimension name:")
+    try:
+        result2 = D2.loc[dict(dim1='x', method='a')]
+        print(f"Result 2: {result2}")
+        print("SUCCESS: Access with 'method' dimension name works!")
+    except ValueError as e:
+        print(f"ERROR: {e}")
+        print("FAILURE: Access with 'method' dimension name fails!")
+
+    # Test with other potentially conflicting dimension names
+    print("\nTesting other potentially conflicting dimension names:")
+    D3 = DataArray(empty, dims=['dim1', 'ffill'], coords={'dim1': ['x', 'y'], 'ffill': ['a', 'b']})
+    try:
+        result3 = D3.loc[dict(dim1='x', ffill='a')]
+        print(f"Result 3: {result3}")
+        print("SUCCESS: Access with 'ffill' dimension name works!")
+    except ValueError as e:
+        print(f"ERROR: {e}")
+        print("FAILURE: Access with 'ffill' dimension name fails!")
+
+if __name__ == "__main__":
+    test_method_dimension()
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..dab0e1eb
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,20 @@
+import numpy as np
+from xarray import DataArray
+
+# Create a DataArray with regular dimension names
+empty = np.zeros((2,2))
+D1 = DataArray(empty, dims=['dim1', 'dim2'], coords={'dim1':['x', 'y'], 'dim2':['a', 'b']})
+
+# Create a DataArray with a dimension named "method"
+D2 = DataArray(empty, dims=['dim1', 'method'], coords={'dim1':['x', 'y'], 'method':['a', 'b']})
+
+# This works
+print("Accessing D1.loc:")
+print(D1.loc[dict(dim1='x', dim2='a')])
+
+# This should fail with the current implementation
+print("\nAccessing D2.loc:")
+try:
+    print(D2.loc[dict(dim1='x', method='a')])
+except ValueError as e:
+    print(f"Error: {e}")
\ No newline at end of file
