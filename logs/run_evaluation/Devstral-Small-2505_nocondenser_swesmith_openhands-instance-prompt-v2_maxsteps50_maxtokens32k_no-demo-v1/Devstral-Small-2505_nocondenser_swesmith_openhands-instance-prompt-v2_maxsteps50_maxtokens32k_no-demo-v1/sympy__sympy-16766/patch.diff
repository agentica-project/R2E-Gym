diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index a3f0310735..a284707d60 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -357,6 +357,10 @@ def _print_Not(self, expr):
         PREC = precedence(expr)
         return self._operators['not'] + self.parenthesize(expr.args[0], PREC)
 
+    def _print_Indexed(self, expr):
+        base, *index = expr.args
+        return "{}[{}]".format(str(base), ", ".join([self._print(ind) for ind in index]))
+
 
 for k in PythonCodePrinter._kf:
     setattr(PythonCodePrinter, '_print_%s' % k, _print_known_func)
diff --git a/test_indexed.py b/test_indexed.py
new file mode 100644
index 0000000000..1125d261fe
--- /dev/null
+++ b/test_indexed.py
@@ -0,0 +1,19 @@
+from sympy import *
+from sympy.printing.pycode import pycode
+
+# Create an IndexedBase
+p = IndexedBase("p")
+
+# Try to print the indexed expression
+print("After fix:")
+print(pycode(p[0]))
+
+# Test with multiple indices
+i, j = symbols('i j')
+print("\nMultiple indices:")
+print(pycode(p[i, j]))
+
+# Test with a more complex expression
+x = symbols('x')
+print("\nComplex expression:")
+print(pycode(p[i, j] * x + sin(p[0])))
\ No newline at end of file
