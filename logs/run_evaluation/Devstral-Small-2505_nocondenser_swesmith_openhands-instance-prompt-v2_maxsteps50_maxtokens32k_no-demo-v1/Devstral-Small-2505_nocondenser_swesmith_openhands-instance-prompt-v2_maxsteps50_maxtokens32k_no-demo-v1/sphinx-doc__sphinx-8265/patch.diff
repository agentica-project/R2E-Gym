diff --git a/setup.py b/setup.py
index a404f1fa5..2c6848797 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py
index 378174993..8b6f4d8c1 100644
--- a/sphinx/util/inspect.py
+++ b/sphinx/util/inspect.py
@@ -390,6 +390,10 @@ def object_description(object: Any) -> str:
         else:
             return "frozenset({%s})" % ", ".join(object_description(x)
                                                  for x in sorted_values)
+    if isinstance(object, tuple):
+        # Special handling for tuples to ensure proper formatting in function signatures
+        return '(' + ', '.join(object_description(x) for x in object) + ')'
+
     try:
         s = repr(object)
     except Exception as exc:
diff --git a/test_output.py b/test_output.py
new file mode 100644
index 000000000..694f02e97
--- /dev/null
+++ b/test_output.py
@@ -0,0 +1,35 @@
+import inspect
+from sphinx.util.inspect import stringify_signature, object_description
+
+def test_function(color=(1, 1, 1), width=5, label=None, name=None):
+    """Test function with tuple default argument."""
+    pass
+
+# Get the signature of the function
+sig = inspect.signature(test_function)
+
+# Write to a file
+with open('/tmp/test_output.txt', 'w') as f:
+    # Test the implementation
+    f.write("Implementation after fix:\n")
+    f.write(f"Signature: {stringify_signature(sig)}\n")
+
+    # Test object_description directly
+    f.write("\nObject description of tuple:\n")
+    f.write(f"Tuple (1, 1, 1): {object_description((1, 1, 1))}\n")
+
+    # Test object_description with nested tuples
+    f.write("\nObject description of nested tuple:\n")
+    f.write(f"Nested tuple (1, (2, 3), 4): {object_description((1, (2, 3), 4))}\n")
+
+    # Test object_description with empty tuple
+    f.write("\nObject description of empty tuple:\n")
+    f.write(f"Empty tuple (): {object_description(())}\n")
+
+    # Show what we want (expected output)
+    f.write("\nExpected format for tuple in signature:\n")
+    f.write("test_function(color=(1, 1, 1), width=5, label=None, name=None)\n")
+
+    # Print the actual output
+    f.write("\nActual output:\n")
+    f.write(f"test_function{stringify_signature(sig)}\n")
\ No newline at end of file
diff --git a/test_signature.py b/test_signature.py
new file mode 100644
index 000000000..e69de29bb
diff --git a/test_tuple_default.py b/test_tuple_default.py
new file mode 100644
index 000000000..9826c7bc8
--- /dev/null
+++ b/test_tuple_default.py
@@ -0,0 +1,3 @@
+def test_function(color=(1, 1, 1), width=5, label=None, name=None):
+    """Test function with tuple default argument."""
+    pass
\ No newline at end of file
diff --git a/test_tuples.py b/test_tuples.py
new file mode 100644
index 000000000..d36288d8d
--- /dev/null
+++ b/test_tuples.py
@@ -0,0 +1,35 @@
+import inspect
+from sphinx.util.inspect import stringify_signature, object_description
+
+# Test with various tuple default arguments
+def test_tuples(
+    a=(1,),  # Single element tuple
+    b=(1, 2, 3),  # Multiple elements
+    c=(),  # Empty tuple
+    d=(1, (2, 3), 4),  # Nested tuple
+    e=(None, None),  # Tuple with None values
+    f=("a", "b"),  # Tuple with strings
+    g=(True, False)  # Tuple with booleans
+):
+    """Test function with various tuple default arguments."""
+    pass
+
+# Get the signature of the function
+sig = inspect.signature(test_tuples)
+
+# Write to a file
+with open('/tmp/tuple_test_output.txt', 'w') as f:
+    # Test the implementation
+    f.write("Implementation after fix:\n")
+    f.write(f"Signature: {stringify_signature(sig)}\n\n")
+
+    # Test each parameter's default value
+    for param_name, param in sig.parameters.items():
+        f.write(f"Parameter: {param_name}\n")
+        f.write(f"Default: {param.default}\n")
+        f.write(f"Description: {object_description(param.default)}\n")
+        f.write("\n")
+
+    # Print the actual output
+    f.write("\nActual output:\n")
+    f.write(f"test_tuples{stringify_signature(sig)}\n")
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index a61299979..e2baccc07 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = --color yes
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
