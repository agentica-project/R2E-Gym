diff --git a/sympy/printing/pretty/pretty_symbology.py b/sympy/printing/pretty/pretty_symbology.py
index 3f7c4a2dc7..78b558f61a 100644
--- a/sympy/printing/pretty/pretty_symbology.py
+++ b/sympy/printing/pretty/pretty_symbology.py
@@ -185,6 +185,9 @@ def xstr(*args):
 for gl in ['beta', 'gamma', 'rho', 'phi', 'chi']:
     sub[gl] = GSUB(gl)
 
+# Special case for omega - use regular omega with subscript 0
+sub['omega'] = U('GREEK SMALL LETTER OMEGA') + DSUB('0')
+
 for d in [str(i) for i in range(10)]:
     sub[d] = DSUB(d)
     sup[d] = DSUP(d)
@@ -553,6 +556,8 @@ def pretty_list(l, mapping):
     else:
         pretty_subs = None
 
+    
+
     # glue the results into one string
     if pretty_subs is None:  # nice formatting of sups/subs did not work
         if subs:
diff --git a/test_greek_subscript.py b/test_greek_subscript.py
new file mode 100644
index 0000000000..1e7d6e7ac4
--- /dev/null
+++ b/test_greek_subscript.py
@@ -0,0 +1,38 @@
+from sympy import symbols, Matrix
+from sympy.printing.pretty.pretty import pretty
+from sympy.printing.pretty.pretty_symbology import pretty_use_unicode, sub
+from sympy.printing.conventions import split_super_sub
+
+# Enable Unicode
+pretty_use_unicode(True)
+
+# Print available subscripts for Greek letters
+print("Available Greek subscripts:")
+for k in sorted(sub.keys()):
+    if k in ['beta', 'gamma', 'rho', 'phi', 'chi', 'omega']:
+        print(f"{k}: {sub[k]}")
+
+# Test split_super_sub function
+print("\nTesting split_super_sub:")
+print(f"w_0: {split_super_sub('w_0')}")
+print(f"omega0: {split_super_sub('omega0')}")
+print(f"omega_0: {split_super_sub('omega_0')}")
+
+# Create symbols
+t0, t1, t2 = symbols('t_0 t_1 t_2')
+w0 = symbols('w_0')
+omega0 = symbols('omega0')
+omega_0 = symbols('omega_0')  # With underscore
+
+# Create matrix with both types of symbols
+matrix1 = Matrix([[-t0*w0, -t1*w0, -t2*w0]])
+matrix2 = Matrix([[-t0*omega0, -t1*omega0, -t2*omega0]])
+matrix3 = Matrix([[-t0*omega_0, -t1*omega_0, -t2*omega_0]])
+
+# Print the matrices
+print("\nMatrix with t and w:")
+print(pretty(matrix1))
+print("\nMatrix with t and omega (without underscore):")
+print(pretty(matrix2))
+print("\nMatrix with t and omega (with underscore):")
+print(pretty(matrix3))
\ No newline at end of file
