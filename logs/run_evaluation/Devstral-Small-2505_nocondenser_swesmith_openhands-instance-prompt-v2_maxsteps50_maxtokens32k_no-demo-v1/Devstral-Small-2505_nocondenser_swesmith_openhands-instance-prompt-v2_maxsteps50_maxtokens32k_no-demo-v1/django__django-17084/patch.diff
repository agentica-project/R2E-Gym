diff --git a/django/db/backends/postgresql/operations.py b/django/db/backends/postgresql/operations.py
index aa839f5634..85bf62a451 100644
--- a/django/db/backends/postgresql/operations.py
+++ b/django/db/backends/postgresql/operations.py
@@ -44,6 +44,24 @@ class DatabaseOperations(BaseDatabaseOperations):
         "SmallAutoField": "smallint",
     }
 
+    def check_expression_support(self, expression):
+        """
+        Check that the backend supports the provided expression.
+
+        This is used on specific backends to rule out known expressions
+        that have problematic or nonexistent implementations. If the
+        expression has a known problem, the backend should raise
+        NotSupportedError.
+        """
+        # Check for aggregate functions containing window functions
+        if hasattr(expression, 'contains_aggregate') and expression.contains_aggregate:
+            for expr in expression.get_source_expressions():
+                if expr and expr.contains_over_clause:
+                    from django.db import NotSupportedError
+                    raise NotSupportedError(
+                        "Aggregate function calls cannot contain window function calls."
+                    )
+
     if is_psycopg3:
         from psycopg.types import numeric
 
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..5952f63305
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,30 @@
+import sys
+from django.db.models import F, Sum, Window
+from django.db.models.functions import Coalesce
+from django.db.models.expressions import ExpressionWrapper
+
+# Add the Django module to the path
+sys.path.insert(0, '/testbed')
+
+# Import Django components directly
+from django.db.models.aggregates import Aggregate
+from django.db.models.expressions import BaseExpression
+
+# Create a simple test to check if a window function can be used in an aggregate
+def test_window_function_aggregate():
+    # Create a window function expression
+    window_expr = Window(Sum("DJR"), order_by=F("date").asc())
+
+    # Create an aggregate expression
+    aggregate_expr = Sum("DJR")
+
+    # Check if the window function can be used in an aggregate
+    print("Window function contains_over_clause:", window_expr.contains_over_clause)
+    print("Aggregate window_compatible:", aggregate_expr.window_compatible)
+
+    # The issue is that PostgreSQL doesn't allow aggregate functions to contain window function calls
+    print("\nTesting if aggregate can contain window function:")
+    print("This would cause the error: psycopg2.errors.GroupingError: aggregate function calls cannot contain window function calls")
+
+if __name__ == "__main__":
+    test_window_function_aggregate()
\ No newline at end of file
