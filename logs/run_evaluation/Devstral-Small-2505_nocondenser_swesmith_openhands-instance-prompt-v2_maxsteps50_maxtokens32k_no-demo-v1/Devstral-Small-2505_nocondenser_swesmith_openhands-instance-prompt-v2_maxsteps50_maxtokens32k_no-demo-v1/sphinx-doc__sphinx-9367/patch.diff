diff --git a/comprehensive_test.py b/comprehensive_test.py
new file mode 100644
index 000000000..e32936869
--- /dev/null
+++ b/comprehensive_test.py
@@ -0,0 +1,35 @@
+#!/usr/bin/env python3
+
+from sphinx.pycode import ast
+
+def test_tuple(source, expected):
+    module = ast.parse(source)
+    result = ast.unparse(module.body[0].value, source)
+    print(f"Source: {source}")
+    print(f"Result: {result}")
+    print(f"Expected: {expected}")
+    print(f"Match: {result == expected}")
+    print("-" * 50)
+    return result == expected
+
+# Test cases
+test_cases = [
+    # Single-element tuple
+    ("(1,)", "(1,)"),
+    # Multi-element tuple
+    ("(1, 2, 3)", "(1, 2, 3)"),
+    # Empty tuple
+    ("()", "()"),
+    # Nested tuple
+    ("(1, (2, 3))", "(1, (2, 3))"),
+    # Tuple with complex expressions
+    ("(x + y,)", "(x + y,)"),
+]
+
+# Run all test cases
+all_passed = True
+for source, expected in test_cases:
+    if not test_tuple(source, expected):
+        all_passed = False
+
+print(f"All tests passed: {all_passed}")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..92d60b47b
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,12 @@
+#!/usr/bin/env python3
+
+from sphinx.pycode import ast
+
+# Test single-element tuple
+source = "(1,)"
+module = ast.parse(source)
+result = ast.unparse(module.body[0].value, source)
+print(f"Source: {source}")
+print(f"Result: {result}")
+print(f"Expected: (1,)")
+print(f"Match: {result == '(1,)'}")
\ No newline at end of file
diff --git a/setup.py b/setup.py
index 206ff4ad4..4bb5faeb1 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.14,<0.18',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/pycode/ast.py b/sphinx/pycode/ast.py
index f541ec0a9..640ac6264 100644
--- a/sphinx/pycode/ast.py
+++ b/sphinx/pycode/ast.py
@@ -214,7 +214,11 @@ class _UnparseVisitor(ast.NodeVisitor):
 
     def visit_Tuple(self, node: ast.Tuple) -> str:
         if node.elts:
-            return "(" + ", ".join(self.visit(e) for e in node.elts) + ")"
+            if len(node.elts) == 1:
+                # Special case for single-element tuple - add trailing comma
+                return "(" + self.visit(node.elts[0]) + ",)"
+            else:
+                return "(" + ", ".join(self.visit(e) for e in node.elts) + ")"
         else:
             return "()"
 
diff --git a/tox.ini b/tox.ini
index a363e187f..3b8bc12d0 100644
--- a/tox.ini
+++ b/tox.ini
@@ -27,7 +27,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
