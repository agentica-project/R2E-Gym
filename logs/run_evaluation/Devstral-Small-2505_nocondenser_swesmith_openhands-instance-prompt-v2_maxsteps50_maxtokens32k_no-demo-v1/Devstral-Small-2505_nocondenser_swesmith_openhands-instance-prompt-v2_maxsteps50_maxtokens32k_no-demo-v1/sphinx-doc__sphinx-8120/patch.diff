diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100755
index 000000000..ddf22c576
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,158 @@
+#!/usr/bin/env python
+import os
+import sys
+import tempfile
+import shutil
+from pathlib import Path
+
+# Create a temporary directory for our test
+test_dir = Path(tempfile.mkdtemp())
+print(f"Created test directory: {test_dir}")
+
+try:
+    # Create a simple Sphinx project structure
+    doc_dir = test_dir / "doc"
+    doc_dir.mkdir()
+    locale_dir = doc_dir / "locale" / "da" / "LC_MESSAGES"
+    locale_dir.mkdir(parents=True)
+
+    # Create a simple conf.py
+    with open(doc_dir / "conf.py", "w") as f:
+        f.write("""
+import os
+import sys
+sys.path.insert(0, os.path.abspath('..'))
+
+extensions = []
+templates_path = ['_templates']
+source_suffix = '.rst'
+master_doc = 'index'
+
+project = 'Test Project'
+copyright = '2023, Test Author'
+author = 'Test Author'
+version = '1.0'
+release = '1.0'
+
+language = 'da'
+locale_dirs = ['locale']  # Point to our locale directory
+gettext_auto_build = True
+
+""")
+
+    # Create a simple index.rst
+    with open(doc_dir / "index.rst", "w") as f:
+        f.write("""
+.. figure:: dummy
+   :figclass: align-center
+
+   This is a test figure. |label|
+
+.. rubric:: Footnotes
+
+.. |label| raw:: html
+
+   <span class="caption-text">Fig. 1</span>
+
+.. code-block:: python
+   :caption: Viser 1
+   :name: code-block-1
+
+   This is a test code block.
+
+""")
+
+    # Create a custom sphinx.po file with our translations
+    with open(locale_dir / "sphinx.po", "w") as f:
+        f.write("""
+msgid ""
+msgstr ""
+"Project-Id-Version: \\n"
+"POT-Creation-Date: 2023-01-01 00:00+0000\\n"
+"PO-Revision-Date: 2023-01-01 00:00+0000\\n"
+"Last-Translator: Test Author <test@example.com>\\n"
+"Language-Team: Danish <test@example.com>\\n"
+"Language: da\\n"
+"MIME-Version: 1.0\\n"
+"Content-Type: text/plain; charset=UTF-8\\n"
+"Content-Transfer-Encoding: 8bit\\n"
+"X-Generator: Poedit 2.4.2\\n"
+"X-Poedit-SourceCharset: UTF-8\\n"
+"X-Poedit-Basepath: ..\\n"
+"X-Poedit-Language: Danish\\n"
+"X-Poedit-Country: DENMARK\\n"
+"X-Poedit-SourceCharset: UTF-8\\n"
+"X-Poedit-Basepath: ..\\n"
+
+msgid "Fig. %s"
+msgstr "Foobar %s"
+
+msgid "Listing %s"
+msgstr "Whatever %s"
+
+""")
+
+    # Create a Makefile
+    with open(doc_dir / "Makefile", "w") as f:
+        f.write("""
+SPHINXOPTS = -D language='da'
+SPHINXBUILD = sphinx-build
+PAPER =
+
+.PHONY: help clean html
+
+help:
+	@$(SPHINXBUILD) -M help $(SOURCEDIR) $(BUILDDIR) $(SPHINXOPTS) $(O)
+
+clean:
+	rm -rf $(BUILDDIR)/*
+
+html:
+	$(SPHINXBUILD) -b html $(SOURCEDIR) $(BUILDDIR) $(SPHINXOPTS) $(O)
+
+""")
+
+    # Change to the doc directory and run sphinx-build
+    os.chdir(doc_dir)
+
+    # First, let's compile the .po file to .mo using Python's babel
+    print("\nCompiling .po to .mo...")
+    from babel.messages.pofile import read_po
+    from babel.messages.mofile import write_mo
+
+    with open("locale/da/LC_MESSAGES/sphinx.po", "r") as po_file:
+        po = read_po(po_file)
+
+    with open("locale/da/LC_MESSAGES/sphinx.mo", "wb") as mo_file:
+        write_mo(mo_file, po)
+
+    print("File exists:", os.path.exists("locale/da/LC_MESSAGES/sphinx.mo"))
+
+    # Now run sphinx-build
+    print("\nRunning sphinx-build...")
+    os.system("sphinx-build -b html . _build/html")
+
+    # Check if our translations were used
+    build_dir = doc_dir / "_build" / "html"
+    if (build_dir / "index.html").exists():
+        with open(build_dir / "index.html", "r") as f:
+            content = f.read()
+            print("\nChecking translations in index.html:")
+            print("Content preview:", content[:500])
+
+            if "Foobar" in content:
+                print("✅ Custom translation 'Foobar' found in output")
+            else:
+                print("❌ Custom translation 'Foobar' NOT found in output")
+
+            if "Whatever" in content:
+                print("✅ Custom translation 'Whatever' found in output")
+            else:
+                print("❌ Custom translation 'Whatever' NOT found in output")
+    else:
+        print("❌ Build failed or index.html was not created")
+
+finally:
+    # Clean up
+    shutil.rmtree(test_dir)
+    print(f"\nRemoved test directory: {test_dir}")
\ No newline at end of file
diff --git a/setup.py b/setup.py
index a404f1fa5..2c6848797 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/application.py b/sphinx/application.py
index 385b74d8a..197a1dc56 100644
--- a/sphinx/application.py
+++ b/sphinx/application.py
@@ -293,7 +293,7 @@ class Sphinx:
                 if catalog.domain == 'sphinx' and catalog.is_outdated():
                     catalog.write_mo(self.config.language)
 
-            locale_dirs = [None, path.join(package_dir, 'locale')] + list(repo.locale_dirs)
+            locale_dirs = [None] + list(repo.locale_dirs) + [path.join(package_dir, 'locale')]
             self.translator, has_translation = locale.init(locale_dirs, self.config.language)
             if has_translation or self.config.language == 'en':
                 # "en" never needs to be translated
diff --git a/test_locale_init.py b/test_locale_init.py
new file mode 100644
index 000000000..ed3f9cb00
--- /dev/null
+++ b/test_locale_init.py
@@ -0,0 +1,83 @@
+#!/usr/bin/env python
+import os
+import sys
+import tempfile
+import shutil
+from pathlib import Path
+import gettext
+
+# Create a temporary directory for our test
+test_dir = Path(tempfile.mkdtemp())
+print(f"Created test directory: {test_dir}")
+
+try:
+    # Create a locale directory structure
+    locale_dir = test_dir / "locale" / "da" / "LC_MESSAGES"
+    locale_dir.mkdir(parents=True)
+
+    # Create a custom sphinx.mo file with our translations
+    with open(locale_dir / "sphinx.po", "w") as f:
+        f.write("""
+msgid ""
+msgstr ""
+"Project-Id-Version: \\n"
+"POT-Creation-Date: 2023-01-01 00:00+0000\\n"
+"PO-Revision-Date: 2023-01-01 00:00+0000\\n"
+"Last-Translator: Test Author <test@example.com>\\n"
+"Language-Team: Danish <test@example.com>\\n"
+"Language: da\\n"
+"MIME-Version: 1.0\\n"
+"Content-Type: text/plain; charset=UTF-8\\n"
+"Content-Transfer-Encoding: 8bit\\n"
+"X-Generator: Poedit 2.4.2\\n"
+"X-Poedit-SourceCharset: UTF-8\\n"
+"X-Poedit-Basepath: ..\\n"
+"X-Poedit-Language: Danish\\n"
+"X-Poedit-Country: DENMARK\\n"
+"X-Poedit-SourceCharset: UTF-8\\n"
+"X-Poedit-Basepath: ..\\n"
+
+msgid "Fig. %s"
+msgstr "Foobar %s"
+
+msgid "Listing %s"
+msgstr "Whatever %s"
+
+""")
+
+    # Compile the .po file to .mo
+    from babel.messages.pofile import read_po
+    from babel.messages.mofile import write_mo
+
+    with open(locale_dir / "sphinx.po", "r") as po_file:
+        po = read_po(po_file)
+
+    with open(locale_dir / "sphinx.mo", "wb") as mo_file:
+        write_mo(mo_file, po)
+
+    print("Created custom translation file:", locale_dir / "sphinx.mo")
+
+    # Now test the gettext initialization with different orderings
+    print("\nTest 1: Built-in locale directory first (current behavior)")
+    builtin_locale_dir = os.path.join(os.path.dirname(os.__file__), 'locale')
+    locale_dirs1 = [builtin_locale_dir, str(locale_dir.parent.parent)]
+    try:
+        trans1 = gettext.translation('sphinx', localedir=locale_dirs1[0], languages=['da'],
+                                     fallback=True)
+        print(f"Translation for 'Fig. 1': {trans1.gettext('Fig. %s') % '1'}")
+    except Exception as e:
+        print(f"Error: {e}")
+
+    print("\nTest 2: User locale directory first (proposed fix)")
+    locale_dirs2 = [str(locale_dir.parent.parent), builtin_locale_dir]
+    try:
+        trans2 = gettext.translation('sphinx', localedir=locale_dirs2[0], languages=['da'],
+                                     fallback=True)
+        print(f"Translation for 'Fig. 1': {trans2.gettext('Fig. %s') % '1'}")
+    except Exception as e:
+        print(f"Error: {e}")
+
+finally:
+    # Clean up
+    shutil.rmtree(test_dir)
+    print(f"\nRemoved test directory: {test_dir}")
\ No newline at end of file
diff --git a/test_sphinx_locale.py b/test_sphinx_locale.py
new file mode 100644
index 000000000..8f4ad96a5
--- /dev/null
+++ b/test_sphinx_locale.py
@@ -0,0 +1,112 @@
+#!/usr/bin/env python
+import os
+import sys
+import tempfile
+import shutil
+from pathlib import Path
+import gettext
+
+# Add the Sphinx module to the path
+sys.path.insert(0, '/testbed')
+
+from sphinx.locale import init, get_translation
+
+# Create a temporary directory for our test
+test_dir = Path(tempfile.mkdtemp())
+print(f"Created test directory: {test_dir}")
+
+try:
+    # Create a locale directory structure
+    locale_dir = test_dir / "locale" / "da" / "LC_MESSAGES"
+    locale_dir.mkdir(parents=True)
+
+    # Create a custom sphinx.mo file with our translations
+    with open(locale_dir / "sphinx.po", "w") as f:
+        f.write("""
+msgid ""
+msgstr ""
+"Project-Id-Version: \\n"
+"POT-Creation-Date: 2023-01-01 00:00+0000\\n"
+"PO-Revision-Date: 2023-01-01 00:00+0000\\n"
+"Last-Translator: Test Author <test@example.com>\\n"
+"Language-Team: Danish <test@example.com>\\n"
+"Language: da\\n"
+"MIME-Version: 1.0\\n"
+"Content-Type: text/plain; charset=UTF-8\\n"
+"Content-Transfer-Encoding: 8bit\\n"
+"X-Generator: Poedit 2.4.2\\n"
+"X-Poedit-SourceCharset: UTF-8\\n"
+"X-Poedit-Basepath: ..\\n"
+"X-Poedit-Language: Danish\\n"
+"X-Poedit-Country: DENMARK\\n"
+"X-Poedit-SourceCharset: UTF-8\\n"
+"X-Poedit-Basepath: ..\\n"
+
+msgid "Fig. %s"
+msgstr "Foobar %s"
+
+msgid "Listing %s"
+msgstr "Whatever %s"
+
+""")
+
+    # Compile the .po file to .mo
+    from babel.messages.pofile import read_po
+    from babel.messages.mofile import write_mo
+
+    with open(locale_dir / "sphinx.po", "r") as po_file:
+        po = read_po(po_file)
+
+    with open(locale_dir / "sphinx.mo", "wb") as mo_file:
+        write_mo(mo_file, po)
+
+    print("Created custom translation file:", locale_dir / "sphinx.mo")
+
+    # Get the path to the built-in Sphinx locale directory
+    import sphinx
+    package_dir = os.path.abspath(os.path.dirname(sphinx.__file__))
+    builtin_locale_dir = os.path.join(package_dir, 'locale')
+
+    # Test with direct gettext calls
+    print("\nTest with direct gettext calls:")
+
+    # Test builtin locale directory
+    print("\nTest 1: Built-in locale directory")
+    try:
+        trans1 = gettext.translation('sphinx', localedir=builtin_locale_dir, languages=['da'])
+        print(f"Translation for 'Fig. 1': {trans1.gettext('Fig. %s') % '1'}")
+    except Exception as e:
+        print(f"Error: {e}")
+
+    # Test user locale directory
+    print("\nTest 2: User locale directory")
+    try:
+        trans2 = gettext.translation('sphinx', localedir=str(locale_dir.parent.parent), languages=['da'])
+        print(f"Translation for 'Fig. 1': {trans2.gettext('Fig. %s') % '1'}")
+    except Exception as e:
+        print(f"Error: {e}")
+
+    # Test with Sphinx locale.init
+    print("\nTest with Sphinx locale.init:")
+
+    # Test with current behavior (builtin first)
+    print("\nTest 3: Built-in locale directory first (current behavior)")
+    from sphinx.locale import translators
+    translators.clear()  # Reset translators
+    locale_dirs1 = [None, builtin_locale_dir, str(locale_dir.parent.parent)]
+    translator1, has_translation1 = init(locale_dirs1, 'da')
+    _1 = get_translation('sphinx')
+    print(f"Translation for 'Fig. 1': {_1('Fig. %s') % '1'}")
+
+    # Test with proposed fix (user locale first)
+    print("\nTest 4: User locale directory first (proposed fix)")
+    translators.clear()  # Reset translators
+    locale_dirs2 = [None, str(locale_dir.parent.parent), builtin_locale_dir]
+    translator2, has_translation2 = init(locale_dirs2, 'da')
+    _2 = get_translation('sphinx')
+    print(f"Translation for 'Fig. 1': {_2('Fig. %s') % '1'}")
+
+finally:
+    # Clean up
+    shutil.rmtree(test_dir)
+    print(f"\nRemoved test directory: {test_dir}")
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index a61299979..e2baccc07 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = --color yes
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
