diff --git a/lib/matplotlib/contour.py b/lib/matplotlib/contour.py
index 3f84250b64..a7625d2d3f 100644
--- a/lib/matplotlib/contour.py
+++ b/lib/matplotlib/contour.py
@@ -986,6 +986,18 @@ class ContourSet(ContourLabeler, mcoll.Collection):
             self._transform = self._transform._as_mpl_transform(self.axes)
         return self._transform
 
+    def set_paths(self, paths):
+        """
+        Set the paths for this ContourSet.
+
+        Parameters
+        ----------
+        paths : list of `.Path`
+            The paths to set for this ContourSet.
+        """
+        self._paths = paths
+        self.changed()
+
     def __getstate__(self):
         state = self.__dict__.copy()
         # the C object _contour_generator cannot currently be pickled. This
diff --git a/test_contourset_set_paths.py b/test_contourset_set_paths.py
new file mode 100644
index 0000000000..ca4874241d
--- /dev/null
+++ b/test_contourset_set_paths.py
@@ -0,0 +1,44 @@
+import matplotlib.pyplot as plt
+import numpy as np
+from matplotlib.path import Path
+from matplotlib.collections import PathCollection
+from matplotlib.contour import ContourSet
+
+# Create a simple contour plot
+x = np.linspace(-3.0, 3.0, 100)
+y = np.linspace(-3.0, 3.0, 100)
+X, Y = np.meshgrid(x, y)
+Z = np.sin(X) * np.cos(Y)
+
+fig, ax = plt.subplots()
+contours = ax.contour(X, Y, Z)
+
+# Get the ContourSet object
+cs = contours
+
+# Get the original paths
+original_paths = cs.get_paths()
+print(f"Original number of paths: {len(original_paths)}")
+
+# Create some transformed paths
+transformed_paths = [Path(path.vertices * 1.1) for path in original_paths]
+
+# Current workaround
+paths = cs.get_paths()
+paths[:] = transformed_paths
+
+# Reset paths to original
+cs.set_paths(original_paths)
+
+# Test the new set_paths method
+cs.set_paths(transformed_paths)
+
+# Verify the paths were updated
+updated_paths = cs.get_paths()
+print(f"Updated number of paths: {len(updated_paths)}")
+print(f"Are paths updated? {all(np.allclose(p1.vertices, p2.vertices) for p1, p2 in zip(updated_paths, transformed_paths))}")
+
+# Close the plot without displaying
+plt.close(fig)
+
+print("Test completed successfully!")
\ No newline at end of file
