diff --git a/bug_test.py b/bug_test.py
new file mode 100644
index 0000000000..10ff4132e6
--- /dev/null
+++ b/bug_test.py
@@ -0,0 +1,13 @@
+import matplotlib.pyplot as plt
+
+# Create a figure with a subfigure
+subfig = plt.figure().subfigures()
+ax = subfig.subplots()
+ax.plot([0, 1, 2], [0, 1, 2], label="test")
+
+# Add a legend to the subfigure
+subfig.legend()
+
+# Save the figure to verify the legend is displayed
+plt.savefig('/testbed/legend_test.png')
+print("Figure saved to legend_test.png")
\ No newline at end of file
diff --git a/legend_test.png b/legend_test.png
new file mode 100644
index 0000000000..14cbbdfba2
Binary files /dev/null and b/legend_test.png differ
diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py
index 44ab024698..aaa2e3089a 100644
--- a/lib/matplotlib/legend.py
+++ b/lib/matplotlib/legend.py
@@ -360,7 +360,7 @@ class Legend(Artist):
         """
         # local import only to avoid circularity
         from matplotlib.axes import Axes
-        from matplotlib.figure import Figure
+        from matplotlib.figure import Figure, FigureBase
 
         super().__init__()
 
@@ -434,11 +434,11 @@ class Legend(Artist):
             self.isaxes = True
             self.axes = parent
             self.set_figure(parent.figure)
-        elif isinstance(parent, Figure):
+        elif isinstance(parent, FigureBase):
             self.isaxes = False
             self.set_figure(parent)
         else:
-            raise TypeError("Legend needs either Axes or Figure as parent")
+            raise TypeError("Legend needs either Axes or FigureBase as parent")
         self.parent = parent
 
         self._loc_used_default = loc is None
diff --git a/subfigure_legend_test.png b/subfigure_legend_test.png
new file mode 100644
index 0000000000..4c882b13ca
Binary files /dev/null and b/subfigure_legend_test.png differ
diff --git a/test_subfigure_legend.py b/test_subfigure_legend.py
new file mode 100644
index 0000000000..a21731154d
--- /dev/null
+++ b/test_subfigure_legend.py
@@ -0,0 +1,30 @@
+import matplotlib.pyplot as plt
+import numpy as np
+
+def test_subfigure_legend():
+    """Test that legends work with SubFigure objects."""
+    # Create a figure with subfigures
+    fig = plt.figure()
+    subfigs = fig.subfigures(1, 2)
+
+    # First subfigure
+    ax1 = subfigs[0].subplots()
+    ax1.plot([0, 1, 2], [0, 1, 2], label='Line 1')
+    ax1.plot([0, 1, 2], [2, 1, 0], label='Line 2')
+    subfigs[0].legend()
+
+    # Second subfigure
+    ax2 = subfigs[1].subplots()
+    ax2.plot([0, 1, 2], [0, 1, 2], label='Line A')
+    ax2.plot([0, 1, 2], [2, 1, 0], label='Line B')
+    subfigs[1].legend()
+
+    # Save the figure
+    plt.savefig('/testbed/subfigure_legend_test.png')
+    print("Figure saved to subfigure_legend_test.png")
+
+    # Return the figure for further inspection if needed
+    return fig
+
+if __name__ == "__main__":
+    test_subfigure_legend()
\ No newline at end of file
