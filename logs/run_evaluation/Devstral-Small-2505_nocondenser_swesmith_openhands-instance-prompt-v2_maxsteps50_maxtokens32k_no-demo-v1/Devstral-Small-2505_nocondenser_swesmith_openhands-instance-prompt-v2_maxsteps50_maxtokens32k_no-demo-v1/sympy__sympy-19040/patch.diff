diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..42628dc5a7
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,17 @@
+from sympy import symbols, expand, factor, I
+from sympy.abc import x, y
+
+# Create the polynomial (x-1)*(y-1)
+z = expand((x-1)*(y-1))
+print("Expanded polynomial:", z)
+
+# Factor without extension
+factored = factor(z)
+print("Factored without extension:", factored)
+
+# Factor with extension=[I] (complex numbers)
+factored_ext = factor(z, extension=[I])
+print("Factored with extension=[I]:", factored_ext)
+
+# Expected: (x-1)*(y-1)
+# Actual: x-1 (missing y-1 factor)
\ No newline at end of file
diff --git a/sympy/polys/factortools.py b/sympy/polys/factortools.py
index c6a5f9f063..0caad1c015 100644
--- a/sympy/polys/factortools.py
+++ b/sympy/polys/factortools.py
@@ -1121,7 +1121,13 @@ def dup_ext_factor(f, K):
     factors = dup_factor_list_include(r, K.dom)
 
     if len(factors) == 1:
-        return lc, [(f, n//dup_degree(f))]
+        # When there's only one factor from the square-free norm,
+        # we need to check if the original polynomial has other factors
+        # that might have been missed
+        coeff, factors = dup_factor_list(f, K)
+        if not factors:
+            return lc, [(f, 1)]
+        return lc, factors
 
     H = s*K.unit
 
