diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..4c7145b36
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,28 @@
+import logging
+import pytest
+
+def test_caplog_consistency(caplog) -> None:
+    def verify_consistency() -> None:
+        # Check that both lists have the same length and contain the same records
+        get_records = caplog.get_records("call")
+        records = caplog.records
+        assert len(get_records) == len(records)
+        # Convert records to a set of (levelname, message) tuples for comparison
+        get_records_set = {(r.levelname, r.message) for r in get_records}
+        records_set = {(r.levelname, r.message) for r in records}
+        assert get_records_set == records_set
+
+    # Initial state should be consistent
+    verify_consistency()
+
+    # After logging, both should contain the new record
+    logging.warning("test")
+    verify_consistency()
+
+    # After clearing, both should be empty
+    caplog.clear()
+    verify_consistency()  # This will fail
+
+if __name__ == "__main__":
+    # Run the test directly
+    pytest.main([__file__])
\ No newline at end of file
diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py
index a4f4214b1..79c87e43f 100644
--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -440,7 +440,14 @@ class LogCaptureFixture:
 
     def clear(self) -> None:
         """Reset the list of log records and the captured log text."""
+        # Store the current records in a variable
+        current_records = self.handler.records
+        # Reset the handler
         self.handler.reset()
+        # Update all references in the stash to point to the new empty list
+        for when in self._item.stash.get(caplog_records_key, {}):
+            if self._item.stash[caplog_records_key][when] is current_records:
+                self._item.stash[caplog_records_key][when] = self.handler.records
 
     def set_level(self, level: Union[int, str], logger: Optional[str] = None) -> None:
         """Set the level of a logger for the duration of a test.
