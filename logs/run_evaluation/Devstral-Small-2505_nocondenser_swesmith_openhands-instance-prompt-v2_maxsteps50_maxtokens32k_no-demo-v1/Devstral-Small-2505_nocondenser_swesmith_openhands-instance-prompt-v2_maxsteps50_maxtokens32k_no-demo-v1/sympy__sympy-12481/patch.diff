diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..b80d9780fb
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,28 @@
+from sympy.combinatorics.permutations import Permutation
+
+print("Test Case 1: Identity permutation with repeated cycles")
+p = Permutation([[0, 1], [0, 1]])
+print("Result:", p)
+print("Expected: Identity permutation (1) or [0, 1]")
+print("Actual:", p.array_form)
+print()
+
+print("Test Case 2: Non-disjoint cycles with more elements")
+p = Permutation([[0, 1, 2], [1, 2, 0]])
+print("Result:", p)
+print("Expected: Cycle that maps 0->2, 1->0, 2->1")
+print("Actual:", p.array_form)
+print()
+
+print("Test Case 3: Multiple non-disjoint cycles")
+p = Permutation([[0, 1], [1, 2], [2, 0]])
+print("Result:", p)
+print("Expected: Cycle that maps 0->1, 1->2, 2->0")
+print("Actual:", p.array_form)
+print()
+
+print("Test Case 4: Non-disjoint cycles with a larger set")
+p = Permutation([[0, 1, 2], [1, 2], [2, 3]], size=4)
+print("Result:", p)
+print("Expected: Permutation that maps 0->2, 1->3, 2->1, 3->0")
+print("Actual:", p.array_form)
\ No newline at end of file
diff --git a/sympy/combinatorics/permutations.py b/sympy/combinatorics/permutations.py
index 136ed5a478..6f6e997a25 100644
--- a/sympy/combinatorics/permutations.py
+++ b/sympy/combinatorics/permutations.py
@@ -895,12 +895,9 @@ def __new__(cls, *args, **kwargs):
         # counting starts from 1.
 
         temp = flatten(args)
-        if has_dups(temp):
-            if is_cycle:
-                raise ValueError('there were repeated elements; to resolve '
-                'cycles use Cycle%s.' % ''.join([str(tuple(c)) for c in args]))
-            else:
-                raise ValueError('there were repeated elements.')
+        # Check for duplicates only in non-cycle form
+        if not is_cycle and has_dups(temp):
+            raise ValueError('there were repeated elements.')
         temp = set(temp)
 
         if not is_cycle and \
diff --git a/sympy/combinatorics/tests/test_permutations.py b/sympy/combinatorics/tests/test_permutations.py
index 7f8cd572e7..18575bf5fd 100644
--- a/sympy/combinatorics/tests/test_permutations.py
+++ b/sympy/combinatorics/tests/test_permutations.py
@@ -349,7 +349,8 @@ def test_args():
     raises(ValueError, lambda: Permutation([[1, 2], 0]))
            # enclosing brackets needed on 0
     raises(ValueError, lambda: Permutation([1, 1, 0]))
-    raises(ValueError, lambda: Permutation([[1], [1, 2]]))
+    # Non-disjoint cycles are now allowed and applied in left-to-right order
+    assert Permutation([[1], [1, 2]]) == Permutation([0, 2, 1])
     raises(ValueError, lambda: Permutation([4, 5], size=10))  # where are 0-3?
     # but this is ok because cycles imply that only those listed moved
     assert Permutation(4, 5) == Permutation([0, 1, 2, 3, 5, 4])
