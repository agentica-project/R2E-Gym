diff --git a/test_lookup_issue.py b/test_lookup_issue.py
new file mode 100644
index 0000000000..03ab2179be
--- /dev/null
+++ b/test_lookup_issue.py
@@ -0,0 +1,63 @@
+import os
+import sys
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[
+            'django.contrib.admin',
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+            'django.contrib.staticfiles',
+            'test_lookup_issue',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        ROOT_URLCONF='',
+        SECRET_KEY='fake-key',
+        MIDDLEWARE_CLASSES=(),
+    )
+    django.setup()
+
+from django.db import models
+from django.contrib.admin.options import ModelAdmin
+from django.contrib.admin.sites import AdminSite
+from django.apps import apps
+
+class TestLookupIssueConfig(apps.AppConfig):
+    name = 'test_lookup_issue'
+
+def test_lookup_allowed_foreign_primary():
+    # Register our app config
+    apps.register_config(TestLookupIssueConfig)
+
+    class Country(models.Model, app_config=TestLookupIssueConfig):
+        name = models.CharField(max_length=256)
+
+    class Place(models.Model, app_config=TestLookupIssueConfig):
+        country = models.ForeignKey(Country, models.CASCADE)
+
+    class Restaurant(models.Model, app_config=TestLookupIssueConfig):
+        place = models.OneToOneField(Place, models.CASCADE, primary_key=True)
+
+    class Waiter(models.Model, app_config=TestLookupIssueConfig):
+        restaurant = models.ForeignKey(Restaurant, models.CASCADE)
+
+    class WaiterAdmin(ModelAdmin):
+        list_filter = ['restaurant__place__country']
+
+    ma = WaiterAdmin(Waiter, AdminSite())
+    result = ma.lookup_allowed('restaurant__place__country', 'test_value')
+    print(f"Result: {result}")
+    return result
+
+if __name__ == "__main__":
+    test_lookup_allowed_foreign_primary()
\ No newline at end of file
