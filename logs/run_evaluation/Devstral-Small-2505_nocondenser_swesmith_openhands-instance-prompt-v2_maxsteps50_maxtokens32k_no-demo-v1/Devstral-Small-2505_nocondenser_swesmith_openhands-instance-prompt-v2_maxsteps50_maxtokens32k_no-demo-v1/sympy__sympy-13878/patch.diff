diff --git a/sympy/stats/crv_types.py b/sympy/stats/crv_types.py
index fff7da80ae..9fecbc49fe 100644
--- a/sympy/stats/crv_types.py
+++ b/sympy/stats/crv_types.py
@@ -153,6 +153,14 @@ class ArcsinDistribution(SingleContinuousDistribution):
     def pdf(self, x):
         return 1/(pi*sqrt((x - self.a)*(self.b - x)))
 
+    def _cdf(self, x):
+        a, b = self.a, self.b
+        return Piecewise(
+            (S.Half + S.Half*sqrt((x - a)/(b - a)), a <= x <= b),
+            (S.Zero, x < a),
+            (S.One, True)
+        )
+
 def Arcsin(name, a=0, b=1):
     r"""
     Create a Continuous Random Variable with an arcsin distribution.
diff --git a/test_cdf_issue.py b/test_cdf_issue.py
new file mode 100644
index 0000000000..4796d70373
--- /dev/null
+++ b/test_cdf_issue.py
@@ -0,0 +1,44 @@
+from sympy import S
+from sympy.stats import *
+import time
+
+def test_cdf(dist_name, dist_func, params, value):
+    print(f"Testing {dist_name}...")
+    try:
+        # Set a timeout of 10 seconds
+        start_time = time.time()
+        result = cdf(dist_func("x", *params))(value)
+        elapsed = time.time() - start_time
+
+        if elapsed > 10:
+            print(f"  TIMEOUT after {elapsed:.2f} seconds")
+            return False
+
+        print(f"  Result: {result}")
+        return True
+    except Exception as e:
+        print(f"  ERROR: {str(e)}")
+        return False
+
+# Test cases from the issue description
+test_cases = [
+    ("Arcsin", Arcsin, [0, 3], 1),
+    ("Dagum", Dagum, [S(1)/3, S(1)/5, 2], 3),
+    ("Erlang", Erlang, [1, 1], 1),
+    ("Frechet", Frechet, [S(4)/3, 1, 2], 3),
+    ("Gamma", Gamma, [0.1, 2], 3),
+    ("GammaInverse", GammaInverse, [S(5)/7, 2], 3),
+    ("Kumaraswamy", Kumaraswamy, [S(1)/123, 5], S(1)/3),
+    ("Laplace", Laplace, [2, 3], 5),
+    ("Logistic", Logistic, [1, 0.1], 2),
+    ("Nakagami", Nakagami, [S(7)/3, 1], 2),
+    ("StudentT", StudentT, [10], 2),
+    ("UniformSum", UniformSum, [5], 2)
+]
+
+print("Testing current CDF implementations:")
+# Test just one distribution at a time
+test_cdf("UniformSum", UniformSum, [5], 2)
+# for name, func, params, value in test_cases:
+#     print(f"\n=== Testing {name} ===")
+#     test_cdf(name, func, params, value)
\ No newline at end of file
