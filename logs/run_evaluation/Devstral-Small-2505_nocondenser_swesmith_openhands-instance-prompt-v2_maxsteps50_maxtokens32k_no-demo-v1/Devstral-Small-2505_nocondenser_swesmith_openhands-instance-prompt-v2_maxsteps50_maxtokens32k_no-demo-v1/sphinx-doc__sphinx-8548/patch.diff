diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index ddfd2b365..c7c65dbc4 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -747,6 +747,13 @@ class Documenter:
                 else:
                     keep = False
             elif (namespace, membername) in attr_docs:
+                # If this is an inherited member, also check for docstrings in base classes
+                if self.options.inherited_members and not keep and hasattr(self.object, '__bases__'):
+                    for base in self.object.__bases__:
+                        base_namespace = '.'.join(c.__name__ for c in (self.object.__mro__[:self.object.__mro__.index(base)]))
+                        if (base_namespace, membername) in attr_docs:
+                            keep = True
+                            break
                 if want_all and isprivate:
                     if self.options.private_members is None:
                         keep = False
@@ -756,6 +763,23 @@ class Documenter:
                     # keep documented attributes
                     keep = True
                 isattr = True
+            # Check if this is an inherited attribute from a base class
+            elif self.options.inherited_members and membername in dir(self.object) and not keep:
+                # Check if this attribute is defined in a base class but not in the current class
+                if membername not in self.object.__dict__:
+                    # This is an inherited attribute
+                    # Check if it has a docstring in any base class
+                    for base in self.object.__bases__:
+                        base_namespace = '.'.join(c.__name__ for c in (self.object.__mro__[:self.object.__mro__.index(base)]))
+                        if (base_namespace, membername) in attr_docs:
+                            keep = True
+                            isattr = True
+                            if want_all and isprivate:
+                                if self.options.private_members is None:
+                                    keep = False
+                                else:
+                                    keep = membername in self.options.private_members
+                            break
             elif want_all and isprivate:
                 if has_doc or self.options.undoc_members:
                     if self.options.private_members is None:
diff --git a/test_inherited_attr.py b/test_inherited_attr.py
new file mode 100644
index 000000000..abfd9e9f7
--- /dev/null
+++ b/test_inherited_attr.py
@@ -0,0 +1,25 @@
+"""Test script for inherited attributes with autodoc."""
+
+class BaseClass:
+    """Base class with an attribute."""
+    #: This is an attribute docstring for 'base_attr'
+    base_attr = 1
+
+class DerivedClass(BaseClass):
+    """Derived class that inherits from BaseClass."""
+    #: This is an attribute docstring for 'derived_attr'
+    derived_attr = 2
+
+# This should document both derived_attr and base_attr when using :inherited-members:
+# .. autoclass:: DerivedClass
+#    :inherited-members:
+
+# Let's add some debug output to see what's happening
+import inspect
+print("BaseClass.__dict__:", BaseClass.__dict__)
+print("DerivedClass.__dict__:", DerivedClass.__dict__)
+print("DerivedClass.__mro__:", DerivedClass.__mro__)
+print("base_attr in DerivedClass.__dict__:", 'base_attr' in DerivedClass.__dict__)
+print("base_attr in BaseClass.__dict__:", 'base_attr' in BaseClass.__dict__)
+print("base_attr in dir(DerivedClass):", 'base_attr' in dir(DerivedClass))
+print("base_attr in dir(BaseClass):", 'base_attr' in dir(BaseClass))
\ No newline at end of file
diff --git a/test_sphinx/debug_output.txt b/test_sphinx/debug_output.txt
new file mode 100644
index 000000000..e740da215
--- /dev/null
+++ b/test_sphinx/debug_output.txt
@@ -0,0 +1,2 @@
+WARNING: while setting up extension sphinx.addnodes: node class 'meta' is already registered, its visitors will be overridden
+WARNING: html_static_path entry '_static' does not exist
diff --git a/test_sphinx/doc/conf.py b/test_sphinx/doc/conf.py
new file mode 100644
index 000000000..561fb8498
--- /dev/null
+++ b/test_sphinx/doc/conf.py
@@ -0,0 +1,27 @@
+# Configuration file for the Sphinx documentation builder.
+#
+# For the full list of built-in configuration values, see the documentation:
+# https://www.sphinx-doc.org/en/master/usage/configuration.html
+
+# -- Project information -----------------------------------------------------
+# https://www.sphinx-doc.org/en/master/usage/configuration.html#project-information
+
+project = 'Test Project'
+copyright = '2023, Test Author'
+author = 'Test Author'
+
+# -- General configuration ---------------------------------------------------
+# https://www.sphinx-doc.org/en/master/usage/configuration.html#general-configuration
+
+extensions = ['sphinx.ext.autodoc']
+
+templates_path = ['_templates']
+exclude_patterns = []
+
+language = 'en'
+
+# -- Options for HTML output -------------------------------------------------
+# https://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-html-output
+
+html_theme = 'alabaster'
+html_static_path = ['_static']
\ No newline at end of file
diff --git a/test_sphinx/doc/index.rst b/test_sphinx/doc/index.rst
new file mode 100644
index 000000000..30b0c57c1
--- /dev/null
+++ b/test_sphinx/doc/index.rst
@@ -0,0 +1,17 @@
+Welcome to Test Project's documentation!
+========================================
+
+.. toctree::
+   :maxdepth: 2
+   :caption: Contents:
+
+.. automodule:: test_inherited_attr
+   :members:
+   :inherited-members:
+
+Indices and tables
+==================
+
+* :ref:`genindex`
+* :ref:`modindex`
+* :ref:`search`
\ No newline at end of file
diff --git a/tox.ini b/tox.ini
index dbb705a3a..9f4fc3a32 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
