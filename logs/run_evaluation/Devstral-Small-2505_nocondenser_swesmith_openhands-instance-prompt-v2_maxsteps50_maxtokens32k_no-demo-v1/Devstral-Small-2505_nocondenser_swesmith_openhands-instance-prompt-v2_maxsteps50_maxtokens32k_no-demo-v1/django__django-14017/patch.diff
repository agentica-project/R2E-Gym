diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index c957ffa564..490e2f19b1 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -40,7 +40,16 @@ class Q(tree.Node):
         super().__init__(children=[*args, *sorted(kwargs.items())], connector=_connector, negated=_negated)
 
     def _combine(self, other, conn):
-        if not isinstance(other, Q):
+        from django.db.models.expressions import Exists
+
+        # Handle Exists objects
+        if isinstance(other, Exists):
+            obj = type(self)()
+            obj.connector = conn
+            obj.add(self, conn)
+            obj.add(other, conn)
+            return obj
+        elif not isinstance(other, Q):
             raise TypeError(other)
 
         # If the other Q() is empty, ignore it and just use `self`.
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..8d5726ede6
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,40 @@
+from django.db.models import Q, Exists
+from django.db.models.query import QuerySet
+from unittest.mock import MagicMock
+
+# Create a mock QuerySet
+mock_queryset = MagicMock(spec=QuerySet)
+
+print("Testing & operator:")
+print("-" * 50)
+
+# Test Exists & Q
+try:
+    result1 = Exists(mock_queryset) & Q()
+    print("Exists & Q works:", result1)
+except Exception as e:
+    print("Exists & Q fails:", type(e).__name__, e)
+
+# Test Q & Exists
+try:
+    result2 = Q() & Exists(mock_queryset)
+    print("Q & Exists works:", result2)
+except Exception as e:
+    print("Q & Exists fails:", type(e).__name__, e)
+
+print("\nTesting | operator:")
+print("-" * 50)
+
+# Test Exists | Q
+try:
+    result3 = Exists(mock_queryset) | Q()
+    print("Exists | Q works:", result3)
+except Exception as e:
+    print("Exists | Q fails:", type(e).__name__, e)
+
+# Test Q | Exists
+try:
+    result4 = Q() | Exists(mock_queryset)
+    print("Q | Exists works:", result4)
+except Exception as e:
+    print("Q | Exists fails:", type(e).__name__, e)
\ No newline at end of file
