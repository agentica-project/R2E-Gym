diff --git a/comprehensive_test.py b/comprehensive_test.py
new file mode 100644
index 00000000..5607c8ef
--- /dev/null
+++ b/comprehensive_test.py
@@ -0,0 +1,79 @@
+import xarray as xr
+import numpy as np
+
+def test_case(name, yCoord, expected_success=True):
+    print(f"\n=== {name} ===")
+    print(f"yCoord: {yCoord}")
+
+    ds1 = xr.Dataset(
+        data_vars=dict(
+            data=(['x', 'y'], np.random.rand(3, 3))
+        ),
+        coords=dict(
+            x=[1, 2, 3],
+            y=yCoord
+        )
+    )
+
+    ds2 = xr.Dataset(
+        data_vars=dict(
+            data=(['x', 'y'], np.random.rand(4, 3))
+        ),
+        coords = dict(
+            x=[4, 5, 6, 7],
+            y=yCoord
+        )
+    )
+
+    try:
+        ds3 = xr.combine_by_coords((ds1, ds2))
+        print(f"Success! Combined datasets with {name} coordinates.")
+        print(f"Resulting dataset shape: {ds3.dims}")
+        assert expected_success, "Expected failure but got success"
+    except ValueError as e:
+        print(f"Error: {e}")
+        assert not expected_success, f"Expected success but got error: {e}"
+
+# Test case 1: Monotonic increasing coordinates (should work)
+test_case("Monotonic increasing", ['a', 'b', 'c'])
+
+# Test case 2: Monotonic decreasing coordinates (should work)
+test_case("Monotonic decreasing", ['c', 'b', 'a'])
+
+# Test case 3: Non-monotonic coordinates (should work with our fix)
+test_case("Non-monotonic", ['a', 'c', 'b'])
+
+# Test case 4: Mixed case non-monotonic coordinates (should work with our fix)
+test_case("Mixed case non-monotonic", ['A', 'c', 'b'])
+
+# Test case 5: Numeric non-monotonic coordinates (should work with our fix)
+test_case("Numeric non-monotonic", [3, 1, 2])
+
+# Test case 6: Different but non-monotonic coordinates in different datasets (should fail)
+print("\n=== Different but non-monotonic coordinates in different datasets ===")
+ds1 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(3, 3))
+    ),
+    coords=dict(
+        x=[1, 2, 3],
+        y=['a', 'c', 'b']
+    )
+)
+
+ds2 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(4, 3))
+    ),
+    coords = dict(
+        x=[4, 5, 6, 7],
+        y=['d', 'f', 'e']  # Different but also non-monotonic
+    )
+)
+
+try:
+    ds3 = xr.combine_by_coords((ds1, ds2))
+    print("Success! Combined datasets with different non-monotonic coordinates.")
+    print(f"Resulting dataset shape: {ds3.dims}")
+except ValueError as e:
+    print(f"Error: {e}")
\ No newline at end of file
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 00000000..327d0a87
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,60 @@
+import xarray as xr
+import numpy as np
+
+# Test case 1: Monotonic coordinates (should work)
+print("Test case 1: Monotonic coordinates")
+yCoord = ['a', 'b', 'c']
+ds1 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(3, 3))
+    ),
+    coords=dict(
+        x=[1, 2, 3],
+        y=yCoord
+    )
+)
+
+ds2 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(4, 3))
+    ),
+    coords = dict(
+        x=[4, 5, 6, 7],
+        y=yCoord
+    )
+)
+
+try:
+    ds3 = xr.combine_by_coords((ds1, ds2))
+    print("Success! Combined datasets with monotonic coordinates.")
+except ValueError as e:
+    print(f"Error: {e}")
+
+# Test case 2: Non-monotonic coordinates (currently fails)
+print("\nTest case 2: Non-monotonic coordinates")
+yCoord = ['a', 'c', 'b']
+ds1 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(3, 3))
+    ),
+    coords=dict(
+        x=[1, 2, 3],
+        y=yCoord
+    )
+)
+
+ds2 = xr.Dataset(
+    data_vars=dict(
+        data=(['x', 'y'], np.random.rand(4, 3))
+    ),
+    coords = dict(
+        x=[4, 5, 6, 7],
+        y=yCoord
+    )
+)
+
+try:
+    ds3 = xr.combine_by_coords((ds1, ds2))
+    print("Success! Combined datasets with non-monotonic coordinates.")
+except ValueError as e:
+    print(f"Error: {e}")
\ No newline at end of file
diff --git a/xarray/core/combine.py b/xarray/core/combine.py
index 37ae903b..80001182 100644
--- a/xarray/core/combine.py
+++ b/xarray/core/combine.py
@@ -501,7 +501,9 @@ def combine_by_coords(datasets, compat='no_conflicts', data_vars='all',
                                    fill_value=fill_value)
 
         # Check the overall coordinates are monotonically increasing
-        for dim in concatenated.dims:
+        # Only check dimensions that vary between datasets (i.e., dimensions in concat_dims)
+        # Dimensions that are identical across datasets are ignored for this check
+        for dim in concat_dims:
             if dim in concatenated:
                 indexes = concatenated.indexes.get(dim)
                 if not (indexes.is_monotonic_increasing
