diff --git a/comprehensive_memoryview_test.py b/comprehensive_memoryview_test.py
new file mode 100644
index 0000000000..fa988e6240
--- /dev/null
+++ b/comprehensive_memoryview_test.py
@@ -0,0 +1,46 @@
+#!/usr/bin/env python
+import os
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DEFAULT_CHARSET='utf-8',
+    )
+    django.setup()
+
+from django.http import HttpResponse
+
+def test_memoryview_content():
+    # Test with ASCII content
+    response1 = HttpResponse(memoryview(b"My Content"))
+    print("ASCII content:")
+    print(f"response.content = {response1.content!r}")
+    assert response1.content == b"My Content"
+
+    # Test with Unicode content
+    unicode_text = "Hello, World!"
+    response2 = HttpResponse(memoryview(unicode_text.encode('utf-8')))
+    print("\nUnicode content:")
+    print(f"response.content = {response2.content!r}")
+    assert response2.content == unicode_text.encode('utf-8')
+
+    # Test with empty content
+    response3 = HttpResponse(memoryview(b""))
+    print("\nEmpty content:")
+    print(f"response.content = {response3.content!r}")
+    assert response3.content == b""
+
+    # Test with binary content
+    binary_data = bytes(range(20))
+    response4 = HttpResponse(memoryview(binary_data))
+    print("\nBinary content (first 20 bytes):")
+    print(f"response.content = {response4.content!r}")
+    assert response4.content == binary_data
+
+    print("\nAll tests passed!")
+
+if __name__ == "__main__":
+    test_memoryview_content()
diff --git a/django/http/response.py b/django/http/response.py
index 6a84e193ba..9e05b72455 100644
--- a/django/http/response.py
+++ b/django/http/response.py
@@ -231,6 +231,8 @@ class HttpResponseBase:
         # - when self._charset != 'utf-8' it re-encodes the content
         if isinstance(value, bytes):
             return bytes(value)
+        if hasattr(value, '__class__') and value.__class__.__name__ == 'memoryview':
+            return bytes(value)
         if isinstance(value, str):
             return bytes(value.encode(self.charset))
         # Handle non-string types.
diff --git a/reproduce_memoryview_issue.py b/reproduce_memoryview_issue.py
new file mode 100644
index 0000000000..2c25a48232
--- /dev/null
+++ b/reproduce_memoryview_issue.py
@@ -0,0 +1,30 @@
+#!/usr/bin/env python
+import os
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        DEFAULT_CHARSET='utf-8',
+    )
+    django.setup()
+
+from django.http import HttpResponse
+
+# Test with string content
+response1 = HttpResponse("My Content")
+print("String content:")
+print(f"response.content = {response1.content!r}")
+
+# Test with bytes content
+response2 = HttpResponse(b"My Content")
+print("\nBytes content:")
+print(f"response.content = {response2.content!r}")
+
+# Test with memoryview content
+response3 = HttpResponse(memoryview(b"My Content"))
+print("\nMemoryview content:")
+print(f"response.content = {response3.content!r}")
+print(f"Expected: b'My Content'")
\ No newline at end of file
