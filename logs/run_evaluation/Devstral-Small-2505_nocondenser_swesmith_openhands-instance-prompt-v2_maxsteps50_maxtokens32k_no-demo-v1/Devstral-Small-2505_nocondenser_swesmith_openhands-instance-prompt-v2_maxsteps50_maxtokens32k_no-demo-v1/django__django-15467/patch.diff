diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 64be087bf1..6d4f2865ab 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -269,7 +269,7 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):
                         "class": get_ul_class(self.radio_fields[db_field.name]),
                     }
                 )
-                kwargs["empty_label"] = _("None") if db_field.blank else None
+                kwargs["empty_label"] = (kwargs.get("empty_label") or _("None")) if db_field.blank else None
 
         if "queryset" not in kwargs:
             queryset = self.get_field_queryset(db, db_field, request)
diff --git a/test_radio_fields_empty_label.py b/test_radio_fields_empty_label.py
new file mode 100644
index 0000000000..bc3abc7db0
--- /dev/null
+++ b/test_radio_fields_empty_label.py
@@ -0,0 +1,37 @@
+import os
+import sys
+import django
+from django.contrib import admin
+from django.utils.translation import gettext_lazy as _
+
+# Set up Django
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+django.setup()
+
+# Let's directly test the problematic line from options.py
+def test_empty_label_override():
+    # Simulate the current behavior
+    kwargs = {'empty_label': 'CUSTOM EMPTY LABEL'}
+    db_field = type('MockField', (), {'blank': True})
+
+    # Current implementation (problematic)
+    current_empty_label = _("None") if db_field.blank else None
+    kwargs["empty_label"] = current_empty_label
+
+    print(f"Current behavior: empty_label = '{kwargs['empty_label']}'")
+    assert kwargs['empty_label'] != 'CUSTOM EMPTY LABEL', "Test should fail with current implementation"
+
+    # Reset for new test
+    kwargs = {'empty_label': 'CUSTOM EMPTY LABEL'}
+
+    # Proposed fix
+    proposed_empty_label = (kwargs.get('empty_label') or _("None")) if db_field.blank else None
+    kwargs["empty_label"] = proposed_empty_label
+
+    print(f"Proposed fix: empty_label = '{kwargs['empty_label']}'")
+    assert kwargs['empty_label'] == 'CUSTOM EMPTY LABEL', "Test should pass with proposed implementation"
+
+if __name__ == '__main__':
+    # Run the test
+    test_empty_label_override()
+    print("Test PASSED: The custom empty_label is now respected!")
\ No newline at end of file
