diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py
index 0766156d64..f314f95e2b 100644
--- a/lib/matplotlib/dates.py
+++ b/lib/matplotlib/dates.py
@@ -592,6 +592,15 @@ def drange(dstart, dend, delta):
 
 
 def _wrap_in_tex(text):
+    # For datetime formatting, we need to handle spaces between components
+    # Add a thin space after month abbreviations to improve spacing
+    # This pattern handles common datetime formats like "Jan 01", "Jan 01 00:00", etc.
+    # But we need to preserve the exact format for test compatibility
+
+    # Only add thin spaces for month abbreviations followed by a digit
+    # This is the specific case that needs fixing for datetime axes
+    text = re.sub(r'([A-Za-z]+) (\d)', r'\1~\2', text)
+
     p = r'([a-zA-Z]+)'
     ret_text = re.sub(p, r'}$\1$\\mathdefault{', text)
 
diff --git a/lib/matplotlib/tests/test_dates.py b/lib/matplotlib/tests/test_dates.py
index 96a3db1730..60a08185fe 100644
--- a/lib/matplotlib/tests/test_dates.py
+++ b/lib/matplotlib/tests/test_dates.py
@@ -325,7 +325,7 @@ def test_date_formatter_callable():
     (datetime.timedelta(weeks=52 * 200),
      [r'$\mathdefault{%d}$' % (year,) for year in range(1990, 2171, 20)]),
     (datetime.timedelta(days=30),
-     [r'Jan$\mathdefault{ %02d 1990}$' % (day,) for day in range(1, 32, 3)]),
+     [r'Jan$\mathdefault{~%02d 1990}$' % (day,) for day in range(1, 32, 3)]),
     (datetime.timedelta(hours=20),
      [r'$\mathdefault{%02d:00:00}$' % (hour,) for hour in range(0, 21, 2)]),
 ])
diff --git a/output.png b/output.png
new file mode 100644
index 0000000000..90d2c8d1d8
Binary files /dev/null and b/output.png differ
diff --git a/output_no_tex.png b/output_no_tex.png
new file mode 100644
index 0000000000..c7e06b538b
Binary files /dev/null and b/output_no_tex.png differ
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..aefad4906d
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,24 @@
+import matplotlib
+import matplotlib.pyplot as plt
+import numpy as np
+import pandas as pd
+
+np.random.seed(1)
+matplotlib.rcParams["text.usetex"] = True
+
+dates = pd.date_range("2020-01-01 00:00:00", end="2020-01-01 00:10:00", periods=100)
+data = np.random.rand(100)
+
+fig, ax = plt.subplots(constrained_layout=True)
+ax.plot(dates.to_numpy(), data)
+plt.savefig("output.png")
+plt.close()
+
+# Also create a version without usetex for comparison
+matplotlib.rcParams["text.usetex"] = False
+fig, ax = plt.subplots(constrained_layout=True)
+ax.plot(dates.to_numpy(), data)
+plt.savefig("output_no_tex.png")
+plt.close()
+
+print("Images saved as output.png and output_no_tex.png")
\ No newline at end of file
