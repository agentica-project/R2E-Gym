diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 338d54d72f..e9f2e47d60 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -387,6 +387,9 @@ class FileInput(Input):
     def value_omitted_from_data(self, data, files, name):
         return name not in files
 
+    def use_required_attribute(self, initial):
+        return super().use_required_attribute(initial) and not initial
+
 
 FILE_INPUT_CONTRADICTION = object()
 
diff --git a/test_fileinput_required.py b/test_fileinput_required.py
new file mode 100644
index 0000000000..69dfb9d4d8
--- /dev/null
+++ b/test_fileinput_required.py
@@ -0,0 +1,39 @@
+import django
+from django import forms
+from django.core.files.uploadedfile import SimpleUploadedFile
+import os
+
+# Configure Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+django.conf.settings.configure(
+    SECRET_KEY='fake-key',
+    INSTALLED_APPS=[
+        'django.forms',
+    ],
+)
+
+# Set up Django
+django.setup()
+
+# Let's directly test the use_required_attribute method of FileInput and ClearableFileInput
+def test_fileinput_required_attribute():
+    """Test that FileInput doesn't display required attribute when initial data exists."""
+    file_input = forms.FileInput()
+    clearable_file_input = forms.ClearableFileInput()
+
+    # Test FileInput.use_required_attribute
+    print("\nFileInput.use_required_attribute results:")
+    print(f"  With no initial: {file_input.use_required_attribute(None)}")
+    initial_file = SimpleUploadedFile("file.txt", b"file content")
+    print(f"  With initial file: {file_input.use_required_attribute(initial_file)}")
+
+    # Test ClearableFileInput.use_required_attribute
+    print("\nClearableFileInput.use_required_attribute results:")
+    print(f"  With no initial: {clearable_file_input.use_required_attribute(None)}")
+    print(f"  With initial file: {clearable_file_input.use_required_attribute(initial_file)}")
+
+    # The issue is that FileInput should behave like ClearableFileInput
+    # when it comes to the required attribute when initial data exists
+
+if __name__ == "__main__":
+    test_fileinput_required_attribute()
\ No newline at end of file
diff --git a/test_fix_verification.py b/test_fix_verification.py
new file mode 100644
index 0000000000..d04ecfca94
--- /dev/null
+++ b/test_fix_verification.py
@@ -0,0 +1,32 @@
+import django
+from django import forms
+from django.core.files.uploadedfile import SimpleUploadedFile
+import os
+
+# Configure Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+django.conf.settings.configure(
+    SECRET_KEY='fake-key',
+    INSTALLED_APPS=[
+        'django.forms',
+    ],
+)
+
+# Set up Django
+django.setup()
+
+def test_fileinput_use_required_attribute():
+    """Test that FileInput correctly implements use_required_attribute."""
+    file_input = forms.FileInput()
+
+    # Test with no initial data (should return True)
+    assert file_input.use_required_attribute(None) is True, "FileInput should return True with no initial data"
+
+    # Test with initial data (should return False)
+    initial_file = SimpleUploadedFile("file.txt", b"file content")
+    assert file_input.use_required_attribute(initial_file) is False, "FileInput should return False with initial data"
+
+    print("All tests passed!")
+
+if __name__ == "__main__":
+    test_fileinput_use_required_attribute()
\ No newline at end of file
