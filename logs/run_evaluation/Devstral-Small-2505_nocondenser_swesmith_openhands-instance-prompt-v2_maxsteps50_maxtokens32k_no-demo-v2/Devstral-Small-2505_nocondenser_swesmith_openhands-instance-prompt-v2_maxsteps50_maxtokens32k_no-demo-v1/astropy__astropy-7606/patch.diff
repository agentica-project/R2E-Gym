diff --git a/astropy/units/core.py b/astropy/units/core.py
index e9bd986d33..663468fe10 100644
--- a/astropy/units/core.py
+++ b/astropy/units/core.py
@@ -1710,6 +1710,8 @@ class UnrecognizedUnit(IrreducibleUnit):
         _unrecognized_operator
 
     def __eq__(self, other):
+        if other is None:
+            return False
         other = Unit(other, parse_strict='silent')
         return isinstance(other, UnrecognizedUnit) and self.name == other.name
 
@@ -2185,7 +2187,7 @@ def _add_prefixes(u, excludes=[], namespace=None, prefixes=False):
                 # for some formatters.
                 if prefix == 'u':
                     format['latex'] = r'\mu ' + u.get_format_name('latex')
-                    format['unicode'] = 'μ' + u.get_format_name('unicode')
+                    format['unicode'] = 'Î¼' + u.get_format_name('unicode')
 
                 for key, val in u._format.items():
                     format.setdefault(key, prefix + val)
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..8f9c5b8b72
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,27 @@
+import sys
+import os
+
+# Add the testbed directory to the Python path
+sys.path.insert(0, os.path.abspath('/testbed'))
+
+from astropy import units as u
+
+def test_issue():
+    print("Creating an unrecognized unit...")
+    x = u.Unit('asdf', parse_strict='silent')
+    print(f"Created unit: {x}")
+
+    try:
+        print("Comparing with None...")
+        result = x == None  # noqa: E711
+        print(f"Result: {result}")
+    except Exception as e:
+        print(f"Error: {type(e).__name__}: {e}")
+        return False
+
+    return True
+
+if __name__ == "__main__":
+    success = test_issue()
+    print(f"\nTest {'passed' if success else 'failed'}")
+    sys.exit(0 if success else 1)
\ No newline at end of file
