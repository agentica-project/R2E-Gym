diff --git a/tests/queries/test_outerref_exclude.py b/tests/queries/test_outerref_exclude.py
new file mode 100644
index 0000000000..eb40fb1d3f
--- /dev/null
+++ b/tests/queries/test_outerref_exclude.py
@@ -0,0 +1,38 @@
+from django.db.models import Exists, OuterRef, Q
+from django.test import TestCase
+
+from .models import Number, Item
+
+class OuterRefExcludeTests(TestCase):
+    def test_exists_exclude(self):
+        # filter()
+        qs = Number.objects.annotate(
+            foo=Exists(
+                Item.objects.filter(tags__category_id=OuterRef('pk'))
+            )
+        ).filter(foo=True)
+        list(qs)  # works
+
+        # exclude()
+        try:
+            qs = Number.objects.annotate(
+                foo=Exists(
+                    Item.objects.exclude(tags__category_id=OuterRef('pk'))
+                )
+            ).filter(foo=True)
+            list(qs)  # should work but crashes
+            self.fail("Expected ValueError but no exception was raised")
+        except ValueError as e:
+            print(f"Expected error with exclude(): {e}")
+
+        # filter(~Q())
+        try:
+            qs = Number.objects.annotate(
+                foo=Exists(
+                    Item.objects.filter(~Q(tags__category_id=OuterRef('pk')))
+                )
+            ).filter(foo=True)
+            list(qs)  # should work but crashes
+            self.fail("Expected ValueError but no exception was raised")
+        except ValueError as e:
+            print(f"Expected error with ~Q(): {e}")
\ No newline at end of file
