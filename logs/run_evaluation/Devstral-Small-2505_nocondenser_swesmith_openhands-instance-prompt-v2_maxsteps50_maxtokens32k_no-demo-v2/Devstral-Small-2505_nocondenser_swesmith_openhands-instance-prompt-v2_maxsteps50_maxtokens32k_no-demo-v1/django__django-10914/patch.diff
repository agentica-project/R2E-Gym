diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py
index acee9887d2..9cdf24bb65 100644
--- a/django/conf/global_settings.py
+++ b/django/conf/global_settings.py
@@ -110,7 +110,7 @@ LANGUAGES = [
     ('mn', gettext_noop('Mongolian')),
     ('mr', gettext_noop('Marathi')),
     ('my', gettext_noop('Burmese')),
-    ('nb', gettext_noop('Norwegian Bokmål')),
+    ('nb', gettext_noop('Norwegian BokmÃ¥l')),
     ('ne', gettext_noop('Nepali')),
     ('nl', gettext_noop('Dutch')),
     ('nn', gettext_noop('Norwegian Nynorsk')),
@@ -304,7 +304,7 @@ FILE_UPLOAD_TEMP_DIR = None
 
 # The numeric mode to set newly-uploaded files to. The value should be a mode
 # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.
-FILE_UPLOAD_PERMISSIONS = None
+FILE_UPLOAD_PERMISSIONS = 0o644
 
 # The numeric mode to assign to newly-created directories, when uploading files.
 # The value should be a mode as you'd pass to os.chmod;
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..007e1c2211
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,62 @@
+import os
+import tempfile
+import shutil
+import django
+from django.conf import settings
+from django.core.files.uploadedfile import TemporaryUploadedFile
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        MEDIA_ROOT=tempfile.mkdtemp(),
+        # We'll test both with default (0o644) and None to show the difference
+        FILE_UPLOAD_MAX_MEMORY_SIZE=0  # Force using TemporaryUploadedFile
+    )
+    django.setup()
+
+import tempfile
+from django.core.files.storage import FileSystemStorage
+from django.core.files.base import ContentFile
+
+# Create a temporary directory for testing
+temp_dir = tempfile.mkdtemp()
+try:
+    # Test with FILE_UPLOAD_PERMISSIONS=None (default)
+    storage = FileSystemStorage(location=temp_dir)
+
+    # Create a TemporaryUploadedFile to simulate file upload
+    content = TemporaryUploadedFile("test_file.txt", "text/plain", 100, 'utf-8')
+    content.write(b"Test content" * 10)  # Make it large enough to ensure it's not in memory
+
+    # Save the file
+    file_name = "test_file.txt"
+    storage.save(file_name, content)
+
+    # Get the file path and check permissions
+    file_path = storage.path(file_name)
+    file_permissions = oct(os.stat(file_path).st_mode & 0o777)[-3:]
+    print(f"Default permissions (FILE_UPLOAD_PERMISSIONS=None): 0o{file_permissions}")
+
+    # Now test with FILE_UPLOAD_PERMISSIONS=0o644
+    # Update settings
+    settings.FILE_UPLOAD_PERMISSIONS = 0o644
+
+    # Reset storage with the new settings
+    storage = FileSystemStorage(location=temp_dir)
+
+    # Create another TemporaryUploadedFile
+    content2 = TemporaryUploadedFile("test_file2.txt", "text/plain", 100, 'utf-8')
+    content2.write(b"Test content 2" * 10)
+
+    # Save another file
+    file_name2 = "test_file2.txt"
+    storage.save(file_name2, content2)
+
+    # Get the file path and check permissions
+    file_path2 = storage.path(file_name2)
+    file_permissions2 = oct(os.stat(file_path2).st_mode & 0o777)[-3:]
+    print(f"Permissions with FILE_UPLOAD_PERMISSIONS=0o644: 0o{file_permissions2}")
+
+finally:
+    # Clean up
+    shutil.rmtree(temp_dir)
\ No newline at end of file
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..e2ad203501
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,45 @@
+import os
+import tempfile
+import shutil
+import django
+from django.conf import settings
+from django.core.files.storage import FileSystemStorage
+from django.core.files.base import ContentFile
+from django.core.files.uploadedfile import TemporaryUploadedFile
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        MEDIA_ROOT=tempfile.mkdtemp(),
+        FILE_UPLOAD_MAX_MEMORY_SIZE=0,  # Force using TemporaryUploadedFile
+        DEBUG=True,  # Required for some tests
+    )
+    django.setup()
+
+# Create a temporary directory for testing
+temp_dir = tempfile.mkdtemp()
+try:
+    # Test with default FILE_UPLOAD_PERMISSIONS (should be 0o644 now)
+    storage = FileSystemStorage(location=temp_dir)
+
+    # Create a TemporaryUploadedFile to simulate file upload
+    content = TemporaryUploadedFile("test_file.txt", "text/plain", 100, 'utf-8')
+    content.write(b"Test content" * 10)
+
+    # Save the file
+    file_name = "test_file.txt"
+    storage.save(file_name, content)
+
+    # Get the file path and check permissions
+    file_path = storage.path(file_name)
+    file_permissions = oct(os.stat(file_path).st_mode & 0o777)[-3:]
+    print(f"Default permissions (FILE_UPLOAD_PERMISSIONS=0o644): 0o{file_permissions}")
+
+    # Verify that the permissions are 0o644
+    assert file_permissions == "644", f"Expected permissions to be 0o644, got 0o{file_permissions}"
+
+    print("Test passed! The default FILE_UPLOAD_PERMISSIONS is now 0o644.")
+
+finally:
+    # Clean up
+    shutil.rmtree(temp_dir)
\ No newline at end of file
