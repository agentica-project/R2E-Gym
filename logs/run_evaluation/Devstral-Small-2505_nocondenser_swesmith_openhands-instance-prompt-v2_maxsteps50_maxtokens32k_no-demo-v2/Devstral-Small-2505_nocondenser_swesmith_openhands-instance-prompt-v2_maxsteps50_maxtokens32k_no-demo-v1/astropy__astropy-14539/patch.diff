diff --git a/astropy/io/fits/diff.py b/astropy/io/fits/diff.py
index 100cdf1b8c..b8b8f190cb 100644
--- a/astropy/io/fits/diff.py
+++ b/astropy/io/fits/diff.py
@@ -28,6 +28,7 @@ from astropy.utils.diff import (
 from astropy.utils.misc import NOT_OVERWRITING_MSG
 
 from .card import BLANK_CARD, Card
+from .column import _VLF
 
 # HDUList is used in one of the doctests
 from .hdu.hdulist import HDUList, fitsopen  # pylint: disable=W0611
@@ -1449,13 +1450,14 @@ class TableDataDiff(_BaseDiff):
                 arrb.dtype, np.floating
             ):
                 diffs = where_not_allclose(arra, arrb, rtol=self.rtol, atol=self.atol)
-            elif "P" in col.format:
+            elif isinstance(arra, _VLF) or isinstance(arrb, _VLF):
+                # Special handling for VLA columns
                 diffs = (
                     [
                         idx
                         for idx in range(len(arra))
-                        if not np.allclose(
-                            arra[idx], arrb[idx], rtol=self.rtol, atol=self.atol
+                        if not np.array_equal(
+                            arra[idx], arrb[idx], equal_nan=True
                         )
                     ],
                 )
diff --git a/check_vla_detection.py b/check_vla_detection.py
new file mode 100644
index 0000000000..e2223fd4c8
--- /dev/null
+++ b/check_vla_detection.py
@@ -0,0 +1,26 @@
+from astropy.io import fits
+import numpy as np
+
+# Create a FITS file with a VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('test.fits', overwrite=True)
+
+# Open the file and inspect the data
+hdu = fits.open('test.fits')[1]
+data = hdu.data['a']
+
+print("Type of data:", type(data))
+print("Data:", data)
+print("Data dtype:", data.dtype)
+
+# Check if we can detect VLA columns by their type or other properties
+print("\nChecking detection methods:")
+print("isinstance(data, fits.column._VLF):", isinstance(data, fits.column._VLF))
+print("hasattr(data, 'dtype') and data.dtype.type == np.object_:",
+      hasattr(data, 'dtype') and data.dtype.type == np.object_)
+print("hasattr(data, '__array__'):", hasattr(data, '__array__'))
+
+# Clean up
+import os
+os.remove('test.fits')
\ No newline at end of file
diff --git a/comprehensive_test.py b/comprehensive_test.py
new file mode 100644
index 0000000000..9fd9ce28d8
--- /dev/null
+++ b/comprehensive_test.py
@@ -0,0 +1,42 @@
+from astropy.io import fits
+import numpy as np
+import os
+
+def test_vla_diff(col_format, array_data, test_name):
+    print(f"\n=== Testing {test_name} ===")
+
+    # Create a FITS file with the specified VLA column
+    col = fits.Column('a', format=col_format, array=array_data)
+    hdu = fits.BinTableHDU.from_columns([col])
+    hdu.writeto('test.fits', overwrite=True)
+
+    # Test if FITSDiff reports differences between identical files
+    identical = fits.FITSDiff('test.fits', 'test.fits').identical
+    print(f"Identical: {identical}")
+
+    # Print the diff report
+    print("\nDiff report:")
+    fits.printdiff('test.fits', 'test.fits')
+
+    # Clean up
+    os.remove('test.fits')
+    return identical
+
+# Test 1: Simple VLA column with integers
+test1 = test_vla_diff('QD', [[0], [0, 0]], "Simple VLA with integers")
+
+# Test 2: VLA column with floats
+test2 = test_vla_diff('PD', [[0.0], [0.0, 0.0]], "VLA with floats")
+
+# Test 3: VLA column with mixed-length arrays
+test3 = test_vla_diff('QD', [[1], [2, 3], [4, 5, 6]], "VLA with mixed-length arrays")
+
+# Test 4: VLA column with empty arrays
+test4 = test_vla_diff('QD', [[], [0]], "VLA with empty arrays")
+
+# Test 5: VLA column with NaN values
+test5 = test_vla_diff('PD', [[np.nan], [0.0, np.nan]], "VLA with NaN values")
+
+# All tests should return True (identical)
+all_passed = all([test1, test2, test3, test4, test5])
+print(f"\nAll tests passed: {all_passed}")
\ No newline at end of file
diff --git a/debug_vla_format.py b/debug_vla_format.py
new file mode 100644
index 0000000000..fb864f8702
--- /dev/null
+++ b/debug_vla_format.py
@@ -0,0 +1,16 @@
+from astropy.io import fits
+import numpy as np
+
+# Create a FITS file with a VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('test.fits', overwrite=True)
+
+# Open the file and inspect the data
+hdu = fits.open('test.fits')[1]
+print("Column format:", col.format)
+print("'P' in format:", 'P' in col.format)
+
+# Clean up
+import os
+os.remove('test.fits')
\ No newline at end of file
diff --git a/inspect_vla.py b/inspect_vla.py
new file mode 100644
index 0000000000..ba6590bdc9
--- /dev/null
+++ b/inspect_vla.py
@@ -0,0 +1,50 @@
+from astropy.io import fits
+import numpy as np
+
+# Create a FITS file with a VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('test.fits', overwrite=True)
+
+# Open the file and inspect the data
+hdu = fits.open('test.fits')[1]
+data = hdu.data['a']
+
+print("Type of VLA data:", type(data))
+print("VLA data:", data)
+print("VLA dtype:", data.dtype)
+
+# Try to compare elements
+print("\nTrying to compare elements:")
+try:
+    print(data[0] == data[0])  # Should be True
+except Exception as e:
+    print(f"Error comparing identical elements: {e}")
+
+try:
+    print(np.array_equal(data[0], data[0]))  # Should be True
+except Exception as e:
+    print(f"Error using np.array_equal on identical elements: {e}")
+
+# Create a modified version with the same data
+col2 = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu2 = fits.BinTableHDU.from_columns([col2])
+hdu2.writeto('test2.fits', overwrite=True)
+hdu2 = fits.open('test2.fits')[1]
+data2 = hdu2.data['a']
+
+print("\nComparing data from two identical files:")
+try:
+    print(np.array_equal(data, data2))  # Should be True
+except Exception as e:
+    print(f"Error using np.array_equal on identical VLA columns: {e}")
+
+try:
+    print(all(np.array_equal(a, b) for a, b in zip(data, data2)))
+except Exception as e:
+    print(f"Error using zip and np.array_equal: {e}")
+
+# Clean up
+import os
+os.remove('test.fits')
+os.remove('test2.fits')
\ No newline at end of file
diff --git a/issue_reproduction.py b/issue_reproduction.py
new file mode 100644
index 0000000000..f6152aba6f
--- /dev/null
+++ b/issue_reproduction.py
@@ -0,0 +1,10 @@
+from astropy.io import fits
+
+# Create a FITS file with a VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('diffbug.fits', overwrite=True)
+
+# Test if FITSDiff reports differences between identical files
+print(f"Identical: {fits.FITSDiff('diffbug.fits', 'diffbug.fits').identical}")
+fits.printdiff('diffbug.fits', 'diffbug.fits')
\ No newline at end of file
diff --git a/pyproject.toml b/pyproject.toml
index b4e9ef8387..ff68a7403d 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..cffd1dedcf
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,18 @@
+from astropy.io import fits
+import os
+
+# Create a FITS file with a VLA column
+col = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu = fits.BinTableHDU.from_columns([col])
+hdu.writeto('diffbug.fits', overwrite=True)
+
+# Test if FITSDiff reports differences between identical files
+print("Testing FITSDiff with identical files:")
+print(f"Identical: {fits.FITSDiff('diffbug.fits', 'diffbug.fits').identical}")
+
+# Print the diff report
+print("\nDiff report:")
+fits.printdiff('diffbug.fits', 'diffbug.fits')
+
+# Clean up
+os.remove('diffbug.fits')
\ No newline at end of file
diff --git a/test_different_files.py b/test_different_files.py
new file mode 100644
index 0000000000..999a0da9d6
--- /dev/null
+++ b/test_different_files.py
@@ -0,0 +1,24 @@
+from astropy.io import fits
+import numpy as np
+import os
+
+# Create two FITS files with different VLA column data
+col1 = fits.Column('a', format='QD', array=[[0], [0, 0]])
+hdu1 = fits.BinTableHDU.from_columns([col1])
+hdu1.writeto('test1.fits', overwrite=True)
+
+col2 = fits.Column('a', format='QD', array=[[0], [1, 0]])  # Different data
+hdu2 = fits.BinTableHDU.from_columns([col2])
+hdu2.writeto('test2.fits', overwrite=True)
+
+# Test if FITSDiff correctly identifies differences
+print("Testing FITSDiff with different files:")
+print(f"Identical: {fits.FITSDiff('test1.fits', 'test2.fits').identical}")
+
+# Print the diff report
+print("\nDiff report:")
+fits.printdiff('test1.fits', 'test2.fits')
+
+# Clean up
+os.remove('test1.fits')
+os.remove('test2.fits')
\ No newline at end of file
